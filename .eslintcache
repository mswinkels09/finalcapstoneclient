[{"/home/mswinkels/workspace/finalcapstoneclient/src/index.js":"1","/home/mswinkels/workspace/finalcapstoneclient/src/components/ProfitTracker.js":"2","/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Login.js":"3","/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Register.js":"4","/home/mswinkels/workspace/finalcapstoneclient/src/components/ApplicationViews.js":"5","/home/mswinkels/workspace/finalcapstoneclient/src/components/nav/NavBar.js":"6","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemList.js":"7","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemProvider.js":"8","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemProvider.js":"9","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemList.js":"10","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseList.js":"11","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseProvider.js":"12","/home/mswinkels/workspace/finalcapstoneclient/src/components/TypesProvider.js":"13","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemsForm.js":"14","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpensesForm.js":"15","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseDetail.js":"16","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemDetail.js":"17","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemDetail.js":"18","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseChart.js":"19","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitChart.js":"20","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitProvider.js":"21","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemForm.js":"22","/home/mswinkels/workspace/finalcapstoneclient/src/components/dashboard/Dashboard.js":"23"},{"size":412,"mtime":1609451054237,"results":"24","hashOfConfig":"25"},{"size":874,"mtime":1609518653240,"results":"26","hashOfConfig":"25"},{"size":2639,"mtime":1610138700165,"results":"27","hashOfConfig":"25"},{"size":3973,"mtime":1609353188288,"results":"28","hashOfConfig":"25"},{"size":3468,"mtime":1609950731355,"results":"29","hashOfConfig":"25"},{"size":3722,"mtime":1609901629426,"results":"30","hashOfConfig":"25"},{"size":9473,"mtime":1610135449272,"results":"31","hashOfConfig":"25"},{"size":2357,"mtime":1609966684872,"results":"32","hashOfConfig":"25"},{"size":1921,"mtime":1609950118464,"results":"33","hashOfConfig":"25"},{"size":6835,"mtime":1610128731740,"results":"34","hashOfConfig":"25"},{"size":3950,"mtime":1610135402760,"results":"35","hashOfConfig":"25"},{"size":3097,"mtime":1609715400013,"results":"36","hashOfConfig":"25"},{"size":1859,"mtime":1609950111884,"results":"37","hashOfConfig":"25"},{"size":9471,"mtime":1610125579336,"results":"38","hashOfConfig":"25"},{"size":4340,"mtime":1610056938769,"results":"39","hashOfConfig":"25"},{"size":2250,"mtime":1610061121340,"results":"40","hashOfConfig":"25"},{"size":4015,"mtime":1609952956497,"results":"41","hashOfConfig":"25"},{"size":5154,"mtime":1610060713474,"results":"42","hashOfConfig":"25"},{"size":2276,"mtime":1609896054704,"results":"43","hashOfConfig":"25"},{"size":5140,"mtime":1609862931963,"results":"44","hashOfConfig":"25"},{"size":1947,"mtime":1609728390323,"results":"45","hashOfConfig":"25"},{"size":7145,"mtime":1609947099848,"results":"46","hashOfConfig":"25"},{"size":7327,"mtime":1610138187618,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"jwzpcx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mswinkels/workspace/finalcapstoneclient/src/index.js",[],["102","103"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/ProfitTracker.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Login.js",["104"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Register.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/ApplicationViews.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/nav/NavBar.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemList.js",["105","106","107","108","109","110"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemList.js",["111","112","113","114","115","116","117","118","119","120","121"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseList.js",["122","123","124","125","126","127"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/TypesProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemsForm.js",["128","129","130","131"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpensesForm.js",["132","133","134","135","136"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { TypesContext } from \"../TypesProvider\";\nimport { ExpenseContext } from \"./ExpenseProvider\";\nimport {  Button, Form, FormGroup, Label, Input, FormText} from \"reactstrap\";\nimport \"./Expenses.css\"\n\nexport const ExpenseForm = props => {\n    const{addExpense, expenses, editExpense} = useContext(ExpenseContext)\n    const{supplyTypes, getSupplyTypes} = useContext(TypesContext)\n\n    const expensePathId = parseInt(window.location.pathname.split('/')[2])\n\n    const [expense, setExpense] = useState({})\n\n    useEffect(() => {\n        getSupplyTypes()\n    }, [])\n    \n    useEffect(() => {\n        if(expensePathId){\n            getExpenseInEditMode()\n        }\n    }, {expensePathId})\n\n    const handleControlledInputChange = (event) => {\n        const newExpenseState = Object.assign({}, expense)\n        newExpenseState[event.target.name] = event.target.value\n        setExpense(newExpenseState)\n    }\n\n    const getExpenseInEditMode = () => {\n            const selectedExpense = expenses.find(expense => expense.id === expensePathId) || {}\n            const selectedExpenseUnnested = {\n                id: selectedExpense.id,\n                supply_type_id: parseInt(selectedExpense.supply_type.id),\n                date_purchased: selectedExpense.date_purchased,\n                cost: selectedExpense.cost,\n                image: \"\"\n            }\n            setExpense(selectedExpenseUnnested)\n    }\n\n    const constructNewExpense = () => {\n        if (expensePathId) {\n            editExpense({\n                id: expense.id,\n                supply_type_id: parseInt(expense.supply_type_id),\n                date_purchased: expense.date_purchased,\n                cost: expense.cost,\n                image: \"\"\n            })\n\n                .then(() => props.history.push(\"/expenses\"))\n        } else {\n            addExpense({\n                supply_type_id: parseInt(expense.supply_type_id),\n                date_purchased: expense.date_purchased,\n                cost: expense.cost,\n                image: \"\"\n            })\n                .then(() => props.history.push(\"/expenses\"))\n        }\n    }\n\n    return(\n        <>\n        <div className=\"expenseform\">\n            <div className=\"form__main\">\n                <Form className=\"form__div\">\n                    <div className=\"center_item_title_form\">\n                        <h2 className=\"form__title\">{expensePathId ?\"Edit Expense\" :\"Add New Expense\"}</h2>\n                    </div>\n                    <FormGroup className=\"form__detail\">\n                        <select name=\"supply_type_id\" id=\"supply_type\" value={expense.supply_type_id}\n                            onChange={handleControlledInputChange}>\n                            <option value=\"\">Select Supply Type</option>\n                            {supplyTypes.map(st => (\n                                <option key={st.id} value={st.id}>\n                                    {st.name}\n                                </option>\n                            ))}\n                        </select>\n                    </FormGroup>\n                    <FormGroup className=\"form__detail\">\n                        <Input type=\"date\" name=\"date_purchased\" id=\"date_purchased\" placeholder=\"Select Date\" \n                            value={expense.date_purchased}\n                            onChange={handleControlledInputChange}/>\n                    </FormGroup>\n                    <FormGroup className=\"form__detail\">\n                        <Input type=\"number\" name=\"cost\" id=\"cost\" placeholder=\"Reciept Total\" \n                            value={expense.cost}\n                            onChange={handleControlledInputChange}/>\n                    </FormGroup>\n                    <div className=\"form__buttons\">\n                        <Button color=\"success\"\n                            onClick={evt => {\n                                evt.preventDefault() \n                                constructNewExpense()\n                            }}\n                                className=\"form__expense_button table__button\">\n                                    {expensePathId ?\"Save\" :\"Submit\"}\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n        </>\n        )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseDetail.js",["137","138","139","140","141"],"import { Button } from \"reactstrap\"\nimport React, { useContext, useEffect, useState, useMemo } from \"react\"\nimport { ExpenseContext } from \"./ExpenseProvider.js\"\nimport \"./Expenses.css\"\n\nexport const ExpenseDetails = (props) => {\n    const { singleExpense, getSingleExpense, deleteExpense } = useContext(ExpenseContext)\n\n    useEffect(() => {\n        const expenseId = parseInt(window.location.pathname.split('/')[2])\n        getSingleExpense(expenseId)\n    }, {})\n\n    console.log(singleExpense)\n\n    const delete_prompt = (id) => {\n        var retVal = window.confirm(\"This action will permanently delete the expense. Are you sure?\");\n        if( retVal == true ) {\n            deleteExpense(id)\n            props.history.push(\"/expenses\")\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n    <div className=\"expensedetail\">\n        <div className=\"center_item_details\">\n            <h3 className=\"detail__main_title\">Expense Detail</h3>\n        </div>\n        <div className=\"center_item_details\">\n            <div className=\"detail__div\">\n                <h4 className=\"detail__title\">Supply Type</h4>\n                <div className=\"detail__data\">{singleExpense.supply_type.name}</div>\n            </div>\n        </div>\n        <div className=\"center_item_details\">\n            <div className=\"detail__div\">\n                <h4 className=\"detail__title\">Date Of Purchase</h4>\n                <div className=\"detail__data\">{singleExpense.dateExpenseConverted}</div>\n            </div>\n        </div>\n        <div className=\"center_item_details\">\n            <div className=\"detail__div\">\n                <h4 className=\"detail__title\">Total Amount</h4>\n                <div className=\"detail__data\">${singleExpense.cost}</div>\n            </div>\n        </div>\n            <div className=\"expense_detail__buttons center_item_details\">\n                    <Button color=\"success\" className=\"btn btn-3\"\n                        onClick={() => props.history.push(`/expenses/${singleExpense.id}/edit`)}\n                        >Edit</Button>\n                    <Button color=\"success\" className=\"btn\" onClick={() => delete_prompt(singleExpense.id)}>Delete</Button>\n            </div>\n    </div>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemDetail.js",["142","143"],"import React, { useContext, useEffect} from \"react\"\nimport { ListedItemContext } from \"./ListedItemProvider.js\"\nimport \"./ListedItems.css\"\nimport { Button } from \"reactstrap\";\n\nexport const ListedItemDetails = (props) => {\n    const { singleListedItem, getSingleListedItem, deleteListedItem } = useContext(ListedItemContext)\n\n    \n    useEffect(() => {\n        const listedItemId = parseInt(window.location.pathname.split('/')[2])\n        getSingleListedItem(listedItemId)\n    }, [])\n\n    const delete_prompt = (id) => {\n        var retVal = window.confirm(\"This action will permanently delete the item. Are you sure?\");\n        if( retVal == true ) {\n            deleteListedItem(id)\n            props.history.push(\"/expenses\")\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n    <div className=\"listeditemdetail\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__main_title_listed\">\n                    <div className=\"detail__listed_title\">{singleListedItem.title}</div>\n                    <div className=\"detail__listed_id\">#{singleListedItem.unique_item_id}</div></div>\n            </div>\n        <div className=\"row__details top_row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_listed_top_row\">\n                    <h4 className=\"listed_detail__title top_row\">Listing Type:</h4>\n                    <div className=\"listed_detail__data\">{singleListedItem.listing_type.name}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_listed_top_row\">\n                    <h4 className=\"listed_detail__title top_row\">Category:</h4>\n                    <div className=\"listed_detail__data\">{singleListedItem.category.name}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_listed_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Cost:</h5>\n                    <div className=\"listed_detail__data\">{singleListedItem.item_cost}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_listed_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Weight:</h5>\n                    <div className=\"listed_detail__data\">{singleListedItem.item_weight}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_listed_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Number of Days Listed:</h5>\n                    <div className=\"listed_detail__data\">{singleListedItem.daysListed}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_listed_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Listing Fee:</h5>\n                    <div className=\"listed_detail__data\">{singleListedItem.listing_fee}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"center_item_details\">\n            <div className=\"detail__div_notes\">\n                <div className=\"detail__data_notes\"><strong>Notes:</strong><div className=\"notes__details\">{singleListedItem.notes}</div></div>\n            </div>\n        </div>\n        <div  className=\"expense_detail__buttons center_item_details\">\n            <Button color=\"success\" className=\"btn btn-3\"\n                onClick={() => props.history.push(`/listedItems/${singleListedItem.id}/edit`)}\n                >Edit</Button>\n            <Button color=\"success\" className=\"btn\" onClick={() => delete_prompt(singleListedItem.id)}>Delete</Button>\n        </div>\n    </div>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemDetail.js",["144","145"],"import React, { useContext, useEffect} from \"react\"\nimport { SoldItemContext } from \"./SoldItemProvider.js\"\nimport \"./SoldItems.css\"\nimport { Button } from \"reactstrap\";\n\nexport const SoldItemDetails = (props) => {\n    const { singleSoldItem, getSingleSoldItem, editSoldItem } = useContext(SoldItemContext)\n\n    const soldItemId = parseInt(window.location.pathname.split('/')[2])\n    useEffect(() => {\n        getSingleSoldItem(soldItemId)\n    }, [])\n\n    console.log(singleSoldItem)\n\n    return (\n    <div className=\"solditemdetail\">\n        <div className=\"center_item_details\">\n            <div className=\"detail__main_title_div\">\n                <div className=\"detail__main_title_sold\">\n                    <div className=\"detail__sold_title\">{singleSoldItem.title}</div>\n                    <div className=\"detail__sold_id\">#{singleSoldItem.unique_item_id}</div>\n                </div>\n                <div className=\"detail__sold_date\">Sold: {singleSoldItem.dateSoldConverted}</div>\n            </div>\n        </div>\n        <div className=\"row__details top_row_sold__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_listed_top_row\">\n                    <h4 className=\"listed_detail__title top_row\">Category</h4>\n                    <div className=\"listed_detail__data\">{singleSoldItem.category.name}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_listed_top_row\">\n                    <h4 className=\"listed_detail__title top_row\">Listing Type</h4>\n                    <div className=\"listed_detail__data\">{singleSoldItem.listing_type.name}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details bottom_row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Weight</h5>\n                    <div className=\"listed_detail__data\">{singleSoldItem.item_weight}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Total Profit</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.profit_per_item}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Cost</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.item_cost}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details bottom_row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Paid</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.item_paid}</div>\n                    \n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Shipping Cost</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.shipping_cost}</div>\n                    \n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Shipping Paid</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.shipping_paid}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details bottom_row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Listing Fee</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.listing_fee}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Final Value Fee</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.final_value_fee}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"center_item_details\">\n            <div className=\"detail__div_notes_sold\">\n                <div className=\"detail__data_notes\"><strong>Notes:</strong><div className=\"notes__details\">{singleSoldItem.notes}</div></div>\n            </div>\n        </div>\n        <div className=\"expense_detail__buttons center_item_details\">\n            <Button color=\"success\" className=\"btn btn-3\"\n            onClick={() => props.history.push(`/soldItems/${singleSoldItem.id}/edit`)}\n            >Edit</Button>\n        </div>\n    </div>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseChart.js",["146","147","148"],"import React, { useContext, useEffect, useState, useMemo } from \"react\"\nimport { ExpenseContext } from \"./ExpenseProvider.js\"\nimport { Pie, Bar } from \"react-chartjs-2\";\nimport \"./Expenses.css\";\n\nexport const ExpenseChart = (props) => {\n    const { supplyTypeExpenses, getExpensesBySupplyType } = useContext(ExpenseContext)\n    const { monthExpenses, getExpensesByMonth } = useContext(ExpenseContext)\n\n    useEffect(() => {\n        getExpensesBySupplyType()\n        getExpensesByMonth()\n    }, [])\n\n    const supplytypelabels = supplyTypeExpenses.map(ste => {\n        return ste.name\n    })\n\n    const supplytypedata = supplyTypeExpenses.map(ste => {\n        return ste.expense\n    })\n    const piedata = {\n        labels: supplytypelabels,\n        datasets: [{\n            label: \"Supply Types\",\n            data: supplytypedata,\n            backgroundColor: [\"rgb(63, 191, 191)\", \"rgb(63, 63, 191)\"]\n        }]\n    }\n\n    const monthlabels = monthExpenses.map(me => {\n        const months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n\n        var selectedMonthName = months[me.expensemonth - 1];\n        return selectedMonthName\n    })\n\n    const monthdata = monthExpenses.map(me => {\n        return me.totalexpense.toFixed(2)\n    })\n\n\n    const bardata = {\n        labels: monthlabels,\n        datasets: [{\n            label: \"Total Expenses\",\n            data: monthdata,\n            backgroundColor: \"rgb(63, 191, 191)\"\n        }],\n    }\n\n    return (\n    <div className=\"expensechart\">\n        <div className=\"chart__div_expense chart__div_expense_pie\">\n            <h4 className=\"chart__title\">Expenses By Supply Type</h4>\n            <Pie data={piedata} />\n        </div>\n        <div className=\"chart__div_expense chart__div_expense_bar\">\n            <h4 className=\"chart__title\">Expenses By Month</h4>\n            <Bar\n                data={bardata}\n                options={{\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    </div>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitChart.js",["149","150","151","152","153","154"],"import React, { useContext, useEffect, useState, useMemo } from \"react\"\nimport { ProfitContext } from \"./ProfitProvider.js\"\nimport { Pie, Bar } from \"react-chartjs-2\";\nimport { OutlinedInput } from \"@material-ui/core\";\nimport \"./Profit.css\"\n\nexport const ProfitChart = (props) => {\n    const { profitListingTypes, getProfitByListingType, profitCategories, getProfitByCategories, profitMonth, getProfitByMonth, profitYear, getProfitByYear } = useContext(ProfitContext)\n\n    useEffect(() => {\n        getProfitByListingType()\n        getProfitByCategories()\n        getProfitByMonth()\n        getProfitByYear()\n    }, [])\n\n    const listingtypeslabels = profitListingTypes.map(plt => {\n        return plt.name\n    })\n\n    const listingtypesdata = profitListingTypes.map(plt => {\n        if (plt.profit != null) {\n            return plt.profit.toFixed(2)\n        }\n    })\n    const listingtypepiedata = {\n        labels: listingtypeslabels,\n        datasets: [{\n            label: \"Listing Types\",\n            data: listingtypesdata,\n            backgroundColor:\n                [\n                    \"rgb(63, 191, 191)\",\n                    \"rgb(63, 63, 191)\",\n                    \"rgb(127, 63, 191)\",\n                    \"rgb(191, 63, 127)\"\n                ]\n        }]\n    }\n\n    const categorieslabels = profitCategories.map(plt => {\n        return plt.name\n    })\n\n    const categoriesdata = profitCategories.map(plt => {\n        if (plt.profit != null) {\n            return plt.profit.toFixed(2)\n        }\n    })\n    const categoriespiedata = {\n        labels: categorieslabels,\n        datasets: [{\n            label: \"Categories\",\n            data: categoriesdata,\n            backgroundColor:\n                [\n                    \"rgb(63, 191, 191)\",\n                    \"rgb(63, 63, 191)\",\n                    \"rgb(127, 63, 191)\",\n                    \"rgb(191, 63, 127)\",\n                    \"rgb(191, 63, 63)\",\n                    \"rgb(191, 191, 63)\",\n                    \"rgb(127, 191, 63)\",\n                    \"rgb(63, 191, 63)\",\n                    \"rgb(38, 114, 38)\"\n                ]\n        }]\n    }\n\n    const monthlabels = profitMonth.map(pm => {\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        var selectedMonthName = months[pm.profitmonth - 1];\n        return selectedMonthName\n    })\n\n    const monthdata = profitMonth.map(pm => {\n            return pm.profit\n    })\n\n    const monthbardata = {\n        labels: monthlabels,\n        datasets: [{\n            label: \"Total Profit\",\n            data: monthdata,\n            backgroundColor: \"rgb(63, 191, 191)\"\n        }],\n    }\n\n\n    const yearlabels = profitYear.map(py => {\n        return py.profityear\n    })\n\n    const yeardata = profitYear.map(py => {\n        return py.profit.toFixed(2)\n    })\n\n    const yearbardata = {\n        labels: yearlabels,\n        datasets: [{\n            label: \"Total Profit\",\n            data: yeardata,\n            backgroundColor: \"rgb(63, 191, 191)\"\n        }],\n    }\n\n    return (\n        <>\n        <div className=\"profit__main\">\n            <div className=\"chart__main_profit\">\n                <div className=\"chart__bar\">\n                    <div className=\"chart__div_profit\">\n                        <h3 className=\"chart__title\">Profit By Month</h3>\n                        <Bar\n                            data={monthbardata}\n                            options={{\n                                scales: {\n                                    yAxes: [{\n                                        ticks: {\n                                            beginAtZero: true\n                                        }\n                                    }]\n                                }\n                            }}\n                        />\n                    </div>\n                    <div className=\"chart__div_profit\">\n                        <h3 className=\"chart__title\">Profit By Year</h3>\n                        <Bar\n                            data={yearbardata}\n                            options={{\n                                scales: {\n                                    yAxes: [{\n                                        ticks: {\n                                            beginAtZero: true\n                                        }\n                                    }]\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"chart__pie\">\n                    <div className=\"chart__div_profit\">\n                        <h3 className=\"chart__title\">Profit By Listing Types</h3>\n                        <Pie data={listingtypepiedata} />\n                    </div>\n                    <div className=\"chart__div_profit\">\n                        <h3 className=\"chart__title\">Profit By Categories</h3>\n                        <Pie data={categoriespiedata} />\n                    </div>\n                </div>\n            </div>\n        </div>\n            \n        </>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemForm.js",["155","156","157","158","159"],"import React, { useContext, useEffect, useState} from \"react\"\nimport { SoldItemContext } from \"./SoldItemProvider.js\"\nimport {  Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport \"./SoldItems.css\"\n\nexport const SoldItemForm = (props) => {\n    const { singleSoldItem, getSingleSoldItem, editSoldItem, soldItems } = useContext(SoldItemContext)\n    const [item, setItem] = useState({})\n\n    const soldItemId = parseInt(window.location.pathname.split('/')[2])\n\n    useEffect(() => {\n        getSingleSoldItem(soldItemId)\n    }, [])\n\n    useEffect(() => {\n        getItemInEditMode()\n    }, {soldItemId})\n\n    const getItemInEditMode = () => {\n        const selectedItem = soldItems.find(item => item.id === soldItemId) || {}\n        setItem(selectedItem)\n    }\n\n    const handleControlledInputChange = (event) => {\n        const newItemState = Object.assign({}, item)\n        newItemState[event.target.name] = event.target.value\n        setItem(newItemState)\n    }\n\n    const updateSoldItem = () => {\n        editSoldItem({\n            id: item.id,\n            item_paid: parseFloat(item.item_paid),\n            shipping_cost: parseFloat(item.shipping_cost),\n            shipping_paid: parseFloat(item.shipping_paid),\n            final_value_fee: parseFloat(item.final_value_fee),\n            sold_date: item.sold_date,\n            returned: false,\n            notes: item.notes\n        })\n            .then(() => props.history.push(\"/soldItems\"))\n    }\n\n    return (\n    <>\n    <div className=\"solditemdetail\">\n        <div className=\"center_item_details\">\n            <div className=\"detail__main_title_div\">\n                <div className=\"detail__main_title_sold\">\n                    <div className=\"detail__sold_title\">{singleSoldItem.title}(Edit)</div>\n                    <div className=\"detail__sold_id\">#{singleSoldItem.unique_item_id}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details bottom_row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Category</h5>\n                    <div className=\"listed_detail__data\">{singleSoldItem.category.name}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Listing Type</h5>\n                    <div className=\"listed_detail__data\">{singleSoldItem.listing_type.name}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Weight</h5>\n                    <div className=\"listed_detail__data\">{singleSoldItem.item_weight}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details bottom_row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Total Profit</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.profit_per_item}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Cost</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.item_cost}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Listing Fee</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.listing_fee}</div>\n                </div>\n            </div>\n        </div>\n            <Form className=\"form__div_sold\">\n                <div className=\"form__rows\">\n                    <FormGroup className=\"form__detail_sold\">\n                        <div className=\"form__detail_placeholder\">Sold Date</div>\n                        <Input type=\"date\" name=\"sold_date\" id=\"sold_date\" placeholder=\"Choose Item's Sold Date\"\n                            value={item.sold_date}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                    <FormGroup className=\"form__detail_sold\">\n                    <div className=\"form__detail_placeholder\">Customer Paid For Item</div>\n                        <Input type=\"number\" name=\"item_paid\" id=\"item_paid\" placeholder=\"Update What Customer Paid\"\n                            value={item.item_paid}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                    <FormGroup className=\"form__detail_sold\">\n                    <div className=\"form__detail_placeholder\">Shipping Cost</div>\n                        <Input type=\"number\" name=\"shipping_cost\" id=\"shipping_cost\" placeholder=\"Update How Much You Paid For Shipping\"\n                            value={item.shipping_cost}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                </div>\n                <div className=\"form__rows\">\n                    <FormGroup className=\"form__detail_sold\">\n                    <div className=\"form__detail_placeholder\">Customer Paid For Shipping</div>\n                        <Input type=\"number\" name=\"shipping_paid\" id=\"shipping_paid\" placeholder=\"Update How Much The Customer Paid For Shipping\"\n                            value={item.shipping_paid}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                    <FormGroup className=\"form__detail_sold\">\n                    <div className=\"form__detail_placeholder\">Final Value Fee</div>\n                        <Input type=\"number\" name=\"final_value_fee\" id=\"final_value_fee\" placeholder=\"Update Final Value Fees\"\n                            value={item.final_value_fee}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                </div>\n                <FormGroup className=\"form__detail_listed form__sold_notes\">\n                <div className=\"form__detail_placeholder\">Notes</div>\n                    <Input type=\"text\" name=\"notes\" id=\"notes\" placeholder=\"Update Notes\"\n                        value={item.notes}\n                        onChange={handleControlledInputChange} />\n                </FormGroup>\n            </Form>\n            <div className=\"form__buttons\">\n                <Button color=\"success\"\n                    onClick={evt => {\n                        evt.preventDefault()\n                        updateSoldItem()\n                    }}\n                        className=\"btn btn-primary\">\n                            Save\n                </Button>\n            </div>\n        </div>\n    </>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/dashboard/Dashboard.js",["160","161","162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":46,"column":39,"nodeType":"170","endLine":46,"endColumn":81},{"ruleId":"171","severity":1,"message":"172","line":1,"column":50,"nodeType":"173","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"175","severity":1,"message":"176","line":20,"column":8,"nodeType":"177","endLine":20,"endColumn":10,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":27,"column":57,"nodeType":"181","messageId":"182","endLine":27,"endColumn":59},{"ruleId":"179","severity":1,"message":"180","line":41,"column":57,"nodeType":"181","messageId":"182","endLine":41,"endColumn":59},{"ruleId":"168","severity":1,"message":"169","line":90,"column":41,"nodeType":"170","endLine":90,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":99,"column":41,"nodeType":"170","endLine":99,"endColumn":107},{"ruleId":"175","severity":1,"message":"183","line":16,"column":8,"nodeType":"177","endLine":16,"endColumn":10,"suggestions":"184"},{"ruleId":"179","severity":1,"message":"180","line":25,"column":53,"nodeType":"181","messageId":"182","endLine":25,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":39,"column":53,"nodeType":"181","messageId":"182","endLine":39,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":53,"column":53,"nodeType":"181","messageId":"182","endLine":53,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":67,"column":53,"nodeType":"181","messageId":"182","endLine":67,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":81,"column":53,"nodeType":"181","messageId":"182","endLine":81,"endColumn":55},{"ruleId":"168","severity":1,"message":"169","line":106,"column":41,"nodeType":"170","endLine":106,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":115,"column":41,"nodeType":"170","endLine":115,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":124,"column":41,"nodeType":"170","endLine":124,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":133,"column":41,"nodeType":"170","endLine":133,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":141,"column":41,"nodeType":"170","endLine":141,"endColumn":107},{"ruleId":"171","severity":1,"message":"172","line":1,"column":50,"nodeType":"173","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"175","severity":1,"message":"185","line":16,"column":8,"nodeType":"177","endLine":16,"endColumn":10,"suggestions":"186"},{"ruleId":"179","severity":1,"message":"180","line":24,"column":53,"nodeType":"181","messageId":"182","endLine":24,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":38,"column":53,"nodeType":"181","messageId":"182","endLine":38,"endColumn":55},{"ruleId":"168","severity":1,"message":"169","line":67,"column":45,"nodeType":"170","endLine":67,"endColumn":111},{"ruleId":"168","severity":1,"message":"169","line":77,"column":45,"nodeType":"170","endLine":77,"endColumn":111},{"ruleId":"171","severity":1,"message":"187","line":4,"column":36,"nodeType":"173","messageId":"174","endLine":4,"endColumn":41},{"ruleId":"171","severity":1,"message":"188","line":4,"column":50,"nodeType":"173","messageId":"174","endLine":4,"endColumn":58},{"ruleId":"175","severity":1,"message":"189","line":22,"column":8,"nodeType":"177","endLine":22,"endColumn":10,"suggestions":"190"},{"ruleId":"171","severity":1,"message":"191","line":43,"column":11,"nodeType":"173","messageId":"174","endLine":43,"endColumn":28},{"ruleId":"171","severity":1,"message":"187","line":4,"column":36,"nodeType":"173","messageId":"174","endLine":4,"endColumn":41},{"ruleId":"171","severity":1,"message":"188","line":4,"column":50,"nodeType":"173","messageId":"174","endLine":4,"endColumn":58},{"ruleId":"175","severity":1,"message":"192","line":17,"column":8,"nodeType":"177","endLine":17,"endColumn":10,"suggestions":"193"},{"ruleId":"175","severity":1,"message":"194","line":23,"column":8,"nodeType":"195","endLine":23,"endColumn":23},{"ruleId":"175","severity":1,"message":"196","line":23,"column":8,"nodeType":"195","endLine":23,"endColumn":23,"suggestions":"197"},{"ruleId":"171","severity":1,"message":"198","line":2,"column":40,"nodeType":"173","messageId":"174","endLine":2,"endColumn":48},{"ruleId":"171","severity":1,"message":"172","line":2,"column":50,"nodeType":"173","messageId":"174","endLine":2,"endColumn":57},{"ruleId":"175","severity":1,"message":"194","line":12,"column":8,"nodeType":"195","endLine":12,"endColumn":10},{"ruleId":"175","severity":1,"message":"199","line":12,"column":8,"nodeType":"195","endLine":12,"endColumn":10,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":18,"column":20,"nodeType":"203","messageId":"204","endLine":18,"endColumn":22},{"ruleId":"175","severity":1,"message":"205","line":13,"column":8,"nodeType":"177","endLine":13,"endColumn":10,"suggestions":"206"},{"ruleId":"201","severity":1,"message":"202","line":17,"column":20,"nodeType":"203","messageId":"204","endLine":17,"endColumn":22},{"ruleId":"171","severity":1,"message":"207","line":7,"column":48,"nodeType":"173","messageId":"174","endLine":7,"endColumn":60},{"ruleId":"175","severity":1,"message":"208","line":12,"column":8,"nodeType":"177","endLine":12,"endColumn":10,"suggestions":"209"},{"ruleId":"171","severity":1,"message":"198","line":1,"column":40,"nodeType":"173","messageId":"174","endLine":1,"endColumn":48},{"ruleId":"171","severity":1,"message":"172","line":1,"column":50,"nodeType":"173","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"175","severity":1,"message":"210","line":13,"column":8,"nodeType":"177","endLine":13,"endColumn":10,"suggestions":"211"},{"ruleId":"171","severity":1,"message":"198","line":1,"column":40,"nodeType":"173","messageId":"174","endLine":1,"endColumn":48},{"ruleId":"171","severity":1,"message":"172","line":1,"column":50,"nodeType":"173","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"171","severity":1,"message":"212","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":23},{"ruleId":"175","severity":1,"message":"213","line":15,"column":8,"nodeType":"177","endLine":15,"endColumn":10,"suggestions":"214"},{"ruleId":"179","severity":1,"message":"215","line":21,"column":57,"nodeType":"181","messageId":"182","endLine":21,"endColumn":59},{"ruleId":"179","severity":1,"message":"215","line":45,"column":53,"nodeType":"181","messageId":"182","endLine":45,"endColumn":55},{"ruleId":"171","severity":1,"message":"187","line":3,"column":36,"nodeType":"173","messageId":"174","endLine":3,"endColumn":41},{"ruleId":"171","severity":1,"message":"188","line":3,"column":50,"nodeType":"173","messageId":"174","endLine":3,"endColumn":58},{"ruleId":"175","severity":1,"message":"208","line":14,"column":8,"nodeType":"177","endLine":14,"endColumn":10,"suggestions":"216"},{"ruleId":"175","severity":1,"message":"194","line":18,"column":8,"nodeType":"195","endLine":18,"endColumn":20},{"ruleId":"175","severity":1,"message":"217","line":18,"column":8,"nodeType":"195","endLine":18,"endColumn":20,"suggestions":"218"},{"ruleId":"171","severity":1,"message":"219","line":16,"column":12,"nodeType":"173","messageId":"174","endLine":16,"endColumn":26},{"ruleId":"175","severity":1,"message":"220","line":31,"column":8,"nodeType":"177","endLine":31,"endColumn":10,"suggestions":"221"},{"ruleId":"175","severity":1,"message":"222","line":39,"column":8,"nodeType":"177","endLine":39,"endColumn":10,"suggestions":"223"},{"ruleId":"171","severity":1,"message":"224","line":86,"column":11,"nodeType":"173","messageId":"174","endLine":86,"endColumn":23},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListedItems'. Either include it or remove the dependency array.","ArrayExpression",["227"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getSoldItems'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.",["229"],"'Label' is defined but never used.","'FormText' is defined but never used.","React Hook useEffect has missing dependencies: 'getCategories', 'getListingTypes', and 'getWeightTypes'. Either include them or remove the dependency array.",["230"],"'getItemInEditMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSupplyTypes'. Either include it or remove the dependency array.",["231"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression","React Hook useEffect has missing dependencies: 'expensePathId' and 'getExpenseInEditMode'. Either include them or remove the dependency array.",["232"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getSingleExpense'. Either include it or remove the dependency array.",["233"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getSingleListedItem'. Either include it or remove the dependency array.",["234"],"'editSoldItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleSoldItem' and 'soldItemId'. Either include them or remove the dependency array.",["235"],"React Hook useEffect has missing dependencies: 'getExpensesByMonth' and 'getExpensesBySupplyType'. Either include them or remove the dependency array.",["236"],"'OutlinedInput' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfitByCategories', 'getProfitByListingType', 'getProfitByMonth', and 'getProfitByYear'. Either include them or remove the dependency array.",["237"],"Array.prototype.map() expects a value to be returned at the end of arrow function.",["238"],"React Hook useEffect has a missing dependency: 'getItemInEditMode'. Either include it or remove the dependency array.",["239"],"'sortedSoldItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getExpensesByMonth', 'getListedItems', 'getProfitByMonth', 'getSoldItems', and 'getSoldItemsByMonth'. Either include them or remove the dependency array.",["240"],"React Hook useEffect has a missing dependency: 'soldItems'. Either include it or remove the dependency array.",["241"],"'profitlabels' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"258","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [getListedItems]",{"range":"271","text":"272"},"Update the dependencies array to be: [getSoldItems]",{"range":"273","text":"274"},"Update the dependencies array to be: [getExpenses]",{"range":"275","text":"276"},"Update the dependencies array to be: [getCategories, getListingTypes, getWeightTypes]",{"range":"277","text":"278"},"Update the dependencies array to be: [getSupplyTypes]",{"range":"279","text":"280"},"Update the dependencies array to be: [expensePathId, getExpenseInEditMode]",{"range":"281","text":"282"},"Update the dependencies array to be: [getSingleExpense]",{"range":"283","text":"284"},"Update the dependencies array to be: [getSingleListedItem]",{"range":"285","text":"286"},"Update the dependencies array to be: [getSingleSoldItem, soldItemId]",{"range":"287","text":"288"},"Update the dependencies array to be: [getExpensesByMonth, getExpensesBySupplyType]",{"range":"289","text":"290"},"Update the dependencies array to be: [getProfitByCategories, getProfitByListingType, getProfitByMonth, getProfitByYear]",{"range":"291","text":"292"},{"range":"293","text":"288"},"Update the dependencies array to be: [getItemInEditMode]",{"range":"294","text":"295"},"Update the dependencies array to be: [getExpensesByMonth, getListedItems, getProfitByMonth, getSoldItems, getSoldItemsByMonth]",{"range":"296","text":"297"},"Update the dependencies array to be: [soldItems]",{"range":"298","text":"299"},[780,782],"[getListedItems]",[521,523],"[getSoldItems]",[532,534],"[getExpenses]",[848,850],"[getCategories, getListingTypes, getWeightTypes]",[624,626],"[getSupplyTypes]",[734,749],"[expensePathId, getExpenseInEditMode]",[461,463],"[getSingleExpense]",[480,482],"[getSingleListedItem]",[447,449],"[getSingleSoldItem, soldItemId]",[494,496],"[getExpensesByMonth, getExpensesBySupplyType]",[616,618],"[getProfitByCategories, getProfitByListingType, getProfitByMonth, getProfitByYear]",[549,551],[611,623],"[getItemInEditMode]",[1295,1297],"[getExpensesByMonth, getListedItems, getProfitByMonth, getSoldItems, getSoldItemsByMonth]",[1577,1579],"[soldItems]"]