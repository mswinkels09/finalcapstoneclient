[{"/home/mswinkels/workspace/finalcapstoneclient/src/index.js":"1","/home/mswinkels/workspace/finalcapstoneclient/src/components/ProfitTracker.js":"2","/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Login.js":"3","/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Register.js":"4","/home/mswinkels/workspace/finalcapstoneclient/src/components/ApplicationViews.js":"5","/home/mswinkels/workspace/finalcapstoneclient/src/components/nav/NavBar.js":"6","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemList.js":"7","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemProvider.js":"8","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemProvider.js":"9","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemList.js":"10","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseList.js":"11","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseProvider.js":"12","/home/mswinkels/workspace/finalcapstoneclient/src/components/TypesProvider.js":"13","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemsForm.js":"14","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpensesForm.js":"15","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseDetail.js":"16","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemDetail.js":"17","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemDetail.js":"18","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseChart.js":"19","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitChart.js":"20","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitProvider.js":"21"},{"size":412,"mtime":1609451054237,"results":"22","hashOfConfig":"23"},{"size":874,"mtime":1609518653240,"results":"24","hashOfConfig":"23"},{"size":2559,"mtime":1609353188288,"results":"25","hashOfConfig":"23"},{"size":3973,"mtime":1609353188288,"results":"26","hashOfConfig":"23"},{"size":2990,"mtime":1609715487578,"results":"27","hashOfConfig":"23"},{"size":3074,"mtime":1609694270370,"results":"28","hashOfConfig":"23"},{"size":7607,"mtime":1609629607846,"results":"29","hashOfConfig":"23"},{"size":2316,"mtime":1609611580119,"results":"30","hashOfConfig":"23"},{"size":1508,"mtime":1609628965459,"results":"31","hashOfConfig":"23"},{"size":2890,"mtime":1609625514496,"results":"32","hashOfConfig":"23"},{"size":2232,"mtime":1609603756467,"results":"33","hashOfConfig":"23"},{"size":3097,"mtime":1609715400013,"results":"34","hashOfConfig":"23"},{"size":1859,"mtime":1609518653242,"results":"35","hashOfConfig":"23"},{"size":6639,"mtime":1609612357524,"results":"36","hashOfConfig":"23"},{"size":3161,"mtime":1609611584153,"results":"37","hashOfConfig":"23"},{"size":1417,"mtime":1609611790728,"results":"38","hashOfConfig":"23"},{"size":1841,"mtime":1609611964945,"results":"39","hashOfConfig":"23"},{"size":1595,"mtime":1609630478861,"results":"40","hashOfConfig":"23"},{"size":2089,"mtime":1609718725625,"results":"41","hashOfConfig":"23"},{"size":2037,"mtime":1609696891739,"results":"42","hashOfConfig":"23"},{"size":1147,"mtime":1609696485682,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"jwzpcx",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/mswinkels/workspace/finalcapstoneclient/src/index.js",[],["96","97"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/ProfitTracker.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Login.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Register.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/ApplicationViews.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/nav/NavBar.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemList.js",["98","99","100","101"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ListedItemContext } from \"./ListedItemProvider.js\"\nimport { SoldItemContext } from \"../soldItems/SoldItemProvider.js\"\nimport { Form, Table, FormGroup, Input } from \"reactstrap\";\nimport { Link } from \"react-router-dom\"\nimport Popup from 'reactjs-popup';\nimport \"./ListedItems.css\";\n\nexport const ListedItemList = (props) => {\n    const { listedItems, getListedItems } = useContext(ListedItemContext)\n    // const { editSoldItem } = useContext(SoldItemContext)\n\n    const [currentSort, setCurrentSort] = useState(('default'))\n    const [item, setItem] = useState({})\n\n    const soldItemId = parseInt(item.id)\n\n\n    useEffect(() => {\n        getListedItems()\n    }, [])\n\n    useEffect(() => {\n        getItemInEditMode()\n    }, {soldItemId})\n\n    const sortTypes = {\n        up: {\n            class: 'sort-up',\n            fn: (a, b) => a.item_cost - b.item_cost || a.daysListed - b.daysListed\n        },\n        down: {\n            class: 'sort-down',\n            fn: (a, b) => b.item_cost - a.item_cost || b.daysListed - a.daysListed\n        },\n        default: {\n            class: 'sort',\n            fn: (a, b) => a\n        }\n    };\n\n    const onSortChange = () => {\n        if (currentSort === 'down')\n            setCurrentSort('up');\n        else if (currentSort === 'up')\n            setCurrentSort('default');\n        else if (currentSort === 'default')\n            setCurrentSort('down');\n    };\n\n    const selectedItem = listedItems.find(i => i.id === item.id) || {}\n\n    const getItemInEditMode = () => {\n        setItem(selectedItem)\n    }\n\n    const handleControlledInputChange = (event) => {\n        const newItemState = Object.assign({}, item)\n        newItemState[event.target.name] = event.target.value\n        setItem(newItemState)\n    }\n\n    // const editListedItemToSold = () => {\n    //         editSoldItem({\n    //             id: item.id,\n    //             item_paid: item.item_paid,\n    //             shipping_cost: item.shipping_cost,\n    //             shipping_paid: item.shipping_paid,\n    //             final_value_fee: item.final_value_fee,\n    //             sold_date: item.sold_date,\n    //             returned: false\n    //         })\n    //             .then(() => props.history.push(\"/soldItems\"))\n    // }\n\n    return (\n        <Table bordered responsive>\n            <thead>\n                <tr>\n                    <th>Item Name</th>\n                    <th>Type Of Listing</th>\n                    <th>Category</th>\n                    <th>\n                        Item Cost\n                        <button onClick={onSortChange}>\n                            <i className={`fas fa-${sortTypes[currentSort].class}`} />\n                        </button>\n                    </th>\n                    <th>\n                        Days Listed\n                        <button onClick={onSortChange}>\n                            <i className={`fas fa-${sortTypes[currentSort].class}`} />\n                        </button>\n                    </th>\n                    <th>SOLD?</th>\n                </tr>\n            </thead>\n            <tbody>\n                {listedItems.sort(sortTypes[currentSort].fn).map(li => {\n                    return (\n                        <tr>\n                            <td><Link to={{ pathname: `/listeditems/${li.id}` }}>{li.title}</Link></td>\n                            <td>{li.listing_type.name}</td>\n                            <td>{li.category.name}</td>\n                            <td>{li.item_cost}</td>\n                            <td>{li.daysListed}</td>\n                            <td>\n                                <Popup\n                                    trigger={<button>Sold?</button>}\n                                    modal>\n                                    {close => (\n                                        <div>\n                                            <button className=\"close\" onClick={close}>&times;</button>\n                                            <div className=\"header\">\n                                                <div className=\"popup__header\"><strong>Item Sold Form</strong></div>\n                                                <div className=\"popup__header\">{li.title}</div>\n                                            </div>\n                                            <Form className=\"content\">\n                                                <FormGroup>\n                                                    <Input className=\"popup__content\" type=\"date\" name=\"sold_date\" id=\"sold_date\" placeholder=\"Choose Item's Sold Date\"\n                                                        value={item.sold_date}\n                                                        onChange={handleControlledInputChange} />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Input type=\"number\" name=\"item_paid\" id=\"item_paid\" placeholder=\"Enter What Customer Paid\"\n                                                        value={item.item_paid}\n                                                        onChange={handleControlledInputChange} />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Input type=\"number\" name=\"shipping_cost\" id=\"shipping_cost\" placeholder=\"Enter How Much You Paid For Shipping\"\n                                                        value={item.shipping_cost}\n                                                        onChange={handleControlledInputChange} />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Input type=\"number\" name=\"shipping_paid\" id=\"shipping_paid\" placeholder=\"Enter How Much The Customer Paid For Shipping\"\n                                                        value={item.shipping_paid}\n                                                        onChange={handleControlledInputChange} />\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Input type=\"number\" name=\"final_value_fee\" id=\"final_value_fee\" placeholder=\"Enter Final Value Fees\"\n                                                        value={item.final_value_fee}\n                                                        onChange={handleControlledInputChange} />\n                                                </FormGroup>\n                                                \n                                            </Form>\n                                            {/* <button\n                                                onClick={evt => {\n                                                    evt.preventDefault() \n                                                    editListedItemToSold()\n                                                }}\n                                                    className=\"btn btn-primary\">\n                                                        Save\n                                            </button> */}\n                                        </div>\n\n                                    )}\n                                </Popup>\n\n                            </td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </Table>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemList.js",["102"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { SoldItemContext } from \"./SoldItemProvider.js\"\nimport { Table } from \"reactstrap\";\nimport { Link } from \"react-router-dom\"\n\nexport const SoldItemList = (props) => {\n    const { soldItems, getSoldItems } = useContext(SoldItemContext)\n\n    const[currentSort, setCurrentSort] = useState(('default'))\n\n    useEffect(() => {\n        getSoldItems()\n    }, [])\n\n    const sortTypes = {\n        up: {\n            class: 'sort-up',\n            fn: (a, b) => a.profit_per_item - b.profit_per_item || a.sold_date - b.sold_date\n        },\n        down: {\n            class: 'sort-down',\n            fn: (a, b) => b.profit_per_item - a.profit_per_item || b.sold_date - a.sold_date\n        },\n        default: {\n            class: 'sort',\n            fn: (a, b) => a\n        }\n    };\n\n    const onSortChange = () => {\n        if (currentSort === 'down')\n            setCurrentSort('up');\n        else if (currentSort === 'up') \n            setCurrentSort('default');\n        else if (currentSort === 'default') \n            setCurrentSort('down');\n    };\n\n    return (\n        <Table bordered responsive>\n            <thead>\n                <tr>\n                    <th>Item Name</th>\n                    <th>\n                        Sold Date\n                        <button onClick={onSortChange}>\n                            <i className={`fas fa-${sortTypes[currentSort].class}`} />\n                        </button>\n                    </th>\n                    <th>Category</th>\n                    <th>Item Cost</th>\n                    <th>Shipping Cost</th>\n                    <th>Item Paid</th>\n                    <th>Shipping Paid</th>\n                    <th>\n                        Total Profit\n                        <button onClick={onSortChange}>\n                            <i className={`fas fa-${sortTypes[currentSort].class}`} />\n                        </button>\n                    </th>\n                    <th>Percentage Of Profit</th>\n                </tr>\n            </thead>\n            <tbody>\n                {soldItems.sort(sortTypes[currentSort].fn).map(si => {\n                    return(\n                        <tr>\n                            <td><Link to={{pathname:`/solditems/${si.id}`}}>{si.title}</Link></td>\n                            <td>{si.sold_date}</td>\n                            <td>{si.category.name}</td>\n                            <td>${si.item_cost}</td>\n                            <td>${si.shipping_cost}</td>\n                            <td>${si.item_paid}</td>\n                            <td>${si.shipping_paid}</td>\n                            <td>${si.profit_per_item}</td>\n                            <td>{si.profit_per_item_percentage}%</td>\n                        </tr>\n                    )\n                    })}\n            </tbody>\n        </Table>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseList.js",["103","104"],"import React, { useContext, useEffect, useState, useMemo } from \"react\"\nimport { ExpenseContext } from \"./ExpenseProvider.js\"\nimport { Table } from \"reactstrap\";\n\nexport const ExpenseList = (props) => {\n    const { expenses, getExpenses } = useContext(ExpenseContext)\n\n    const[currentSort, setCurrentSort] = useState(('default'))\n\n    useEffect(() => {\n        getExpenses()\n    }, [])\n\n\n    const sortTypes = {\n        up: {\n            class: 'sort-up',\n            fn: (a, b) => a.cost - b.cost || a.date_purchased - b.date_purchased\n        },\n        down: {\n            class: 'sort-down',\n            fn: (a, b) => b.cost - a.cost || b.date_purchased - a.date_purchased\n        },\n        default: {\n            class: 'sort',\n            fn: (a, b) => a\n        }\n    };\n\n\n\n    const onSortChange = () => {\n        if (currentSort === 'down')\n            setCurrentSort('up');\n        else if (currentSort === 'up') \n            setCurrentSort('default');\n        else if (currentSort === 'default') \n            setCurrentSort('down');\n    };\n    \n    return(\n        <Table bordered responsive>\n            <thead>\n                <tr>\n                    <th>\n                        Date\n                        <button onClick={onSortChange}>\n\t\t\t\t\t\t\t\t\t<i className={`fas fa-${sortTypes[currentSort].class}`} />\n\t\t\t\t\t\t\t\t</button>\n                    </th>\n                    <th>Supply Type</th>\n                    <th>\n                        Amount Spent\n                        <button onClick={onSortChange}>\n\t\t\t\t\t\t\t\t\t<i className={`fas fa-${sortTypes[currentSort].class}`} />\n\t\t\t\t\t\t\t\t</button>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n            {expenses.sort(sortTypes[currentSort].fn).map(e => {\n                    return(\n                        <tr>\n                            <td>{e.date_purchased}</td>\n                            <td>{e.supply_type.name}</td>\n                            <td>{e.cost}</td>\n                            <td><button type=\"button\" onClick={() => props.history.push(`/expenses/${e.id}`)}>View</button></td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </Table>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/TypesProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemsForm.js",["105","106","107","108","109","110"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { TypesContext } from \"../TypesProvider\";\nimport { ListedItemContext } from \"./ListedItemProvider\";\nimport {  Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nexport const ItemForm = props => {\n    const{addItem, listedItems, editListedItem} = useContext(ListedItemContext)\n    const{categories, getCategories, listingTypes, getListingTypes, weightTypes, getWeightTypes} = useContext(TypesContext)\n\n    const [item, setItem] = useState({})\n\n    const itemPathId = parseInt(window.location.pathname.split('/')[2])\n\n    const findWeightTypePercentage = weightTypes.find(wt => {\n        return parseInt(item.weight_type_id)===parseInt(wt.id)\n    }) || {}\n\n    // console.log(listingTypes)\n    useEffect(() => {\n        getCategories()\n        getListingTypes()\n        getWeightTypes()\n    }, [])\n\n    useEffect(() => {\n        getItemInEditMode()\n    }, {itemPathId})\n\n    const calculateItemCost = (item) => {\n        if (item.weight_type_id === \"3\") {\n            return item.item_cost\n        } else {\n            return item.item_weight * findWeightTypePercentage.percentage\n        }\n    }\n\n    const getItemInEditMode = () => {\n        const selectedItem = listedItems.find(item => item.id === itemPathId) || {}\n        setItem(selectedItem)\n    }\n\n\n    const handleControlledInputChange = (event) => {\n        const newItemState = Object.assign({}, item)\n        newItemState[event.target.name] = event.target.value\n        setItem(newItemState)\n    }\n\n    const constructNewItem = () => {\n        debugger\n        if (itemPathId) {\n            editListedItem({\n                id: item.id,\n                title: item.title,\n                unique_item_id: parseInt(item.unique_item_id),\n                item_weight: parseInt(item.item_weight),\n                weight_type_id: parseInt(item.weight_type_id),\n                item_cost: item.item_cost,\n                date_listed: item.date_listed,\n                category_id: parseInt(item.category_id),\n                listing_type_id: parseInt(item.listing_type_id),\n                listing_fee: parseFloat(item.listing_fee),\n                notes: item.notes\n            })\n\n                .then(() => props.history.push(\"/listedItems\"))\n        } else {\n            addItem({\n                title: item.title,\n                unique_item_id: parseInt(item.unique_item_id),\n                item_weight: parseInt(item.item_weight),\n                weight_type_id: parseInt(item.weight_type_id),\n                item_cost: parseFloat(calculateItemCost(item)),\n                date_listed: item.date_listed,\n                category_id: parseInt(item.category_id),\n                listing_type_id: parseInt(item.listing_type_id),\n                listing_fee: parseFloat(item.listing_fee),\n                notes: item.notes\n            })\n                .then(() => props.history.push(\"/listedItems\"))\n        }\n    }\n\n    return(\n        <>\n        <h2>Add New Item</h2>\n        <Form>\n            <FormGroup>\n                <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Enter Item's Name\" \n                    value={item.title}\n                    onChange={handleControlledInputChange}/>\n            </FormGroup>\n            <FormGroup>\n                <select name=\"listing_type_id\" id=\"listing_type\" value={item.listing_type_id}\n                    onChange={handleControlledInputChange}>\n                    <option value=\"\">Select Listing Type</option>\n                    {listingTypes.map(lt => (\n                        <option key={lt.id} value={lt.id}>\n                            {lt.name}\n                        </option>\n                    ))}\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <select name=\"category_id\" id=\"category\" value={item.category_id}\n                    onChange={handleControlledInputChange}>\n                    <option value=\"\">Select Item Category</option>\n                    {categories.map(c => (\n                        <option key={c.id} value={c.id}>\n                            {c.name}\n                        </option>\n                    ))}\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"number\" name=\"unique_item_id\" id=\"unique_item_id\" placeholder=\"Enter Item's Unique ID (If Applicable)\" \n                    value={item.unique_item_id}\n                    onChange={handleControlledInputChange}/>\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"date\" name=\"date_listed\" id=\"date_listed\" placeholder=\"Select Date Item Was Listed\" \n                    value={item.date_listed}\n                    onChange={handleControlledInputChange}/>\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"number\" name=\"item_weight\" id=\"item_weight\" placeholder=\"Enter Item's Weight\" \n                    value={item.item_weight}\n                    onChange={handleControlledInputChange }/>\n            </FormGroup>\n            <FormGroup>\n                <select name=\"weight_type_id\" id=\"weight_type\" value={item.weight_type_id}\n                    onChange={handleControlledInputChange}>\n                    <option value=\"\">Select Weight Type</option>\n                    {weightTypes.map(wt => (\n                        <option key={wt.id} value={wt.id}>\n                            {wt.type}\n                        </option>\n                    ))}\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"number\" name=\"item_cost\" id=\"item_cost\" placeholder=\"Enter Item's Cost\" \n                    value={calculateItemCost(item)}\n                    onChange={handleControlledInputChange}/>\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"number\" name=\"listing_fee\" id=\"listing_fee\" placeholder=\"Enter Item's Listing Fee (If Applicable)\" \n                    value={item.listing_fee}\n                    onChange={handleControlledInputChange }/>\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"textarea\" name=\"notes\" id=\"notes\" placeholder=\"Item Notes\" \n                    value={item.notes}\n                    onChange={handleControlledInputChange }/>\n            </FormGroup>\n        </Form>\n        <button\n            onClick={evt => {\n                evt.preventDefault() \n                constructNewItem()\n            }}\n                className=\"btn btn-primary\">\n                    {itemPathId ?\"Save\" :\"Submit\"}\n        </button>\n        </>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpensesForm.js",["111","112","113","114","115","116"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { TypesContext } from \"../TypesProvider\";\nimport { ExpenseContext } from \"./ExpenseProvider\";\nimport {  Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nexport const ExpenseForm = props => {\n    const{addExpense, expenses, editExpense} = useContext(ExpenseContext)\n    const{supplyTypes, getSupplyTypes} = useContext(TypesContext)\n\n    const expensePathId = parseInt(window.location.pathname.split('/')[2])\n\n    const [expense, setExpense] = useState({})\n\n    useEffect(() => {\n        getSupplyTypes()\n    }, [])\n    \n    useEffect(() => {\n        getExpenseInEditMode()\n    }, {expensePathId})\n\n    const handleControlledInputChange = (event) => {\n        const newExpenseState = Object.assign({}, expense)\n        newExpenseState[event.target.name] = event.target.value\n        setExpense(newExpenseState)\n    }\n\n    const getExpenseInEditMode = () => {\n            const selectedExpense = expenses.find(expense => expense.id === expensePathId) || {}\n            setExpense(selectedExpense)\n    }\n\n    const constructNewExpense = () => {\n        if (expensePathId) {\n            editExpense({\n                id: expense.id,\n                supply_type_id: parseInt(expense.supply_type_id),\n                date_purchased: expense.date_purchased,\n                cost: expense.cost,\n                image: \"\"\n            })\n\n                .then(() => props.history.push(\"/expenses\"))\n        } else {\n            addExpense({\n                supply_type_id: parseInt(expense.supply_type_id),\n                date_purchased: expense.date_purchased,\n                cost: expense.cost,\n                image: \"\"\n            })\n                .then(() => props.history.push(\"/expenses\"))\n        }\n    }\n\n    return(\n        <>\n        <h2>Add New Expense</h2>\n        <Form>\n            <FormGroup>\n                <select name=\"supply_type_id\" id=\"supply_type\" value={expense.supply_type_id}\n                    onChange={handleControlledInputChange}>\n                    <option value=\"\">Select Supply Type</option>\n                    {supplyTypes.map(st => (\n                        <option key={st.id} value={st.id}>\n                            {st.name}\n                        </option>\n                    ))}\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"date\" name=\"date_purchased\" id=\"date_purchased\" placeholder=\"Select Date\" \n                    value={expense.date_purchased}\n                    onChange={handleControlledInputChange}/>\n            </FormGroup>\n            <FormGroup>\n                <Input type=\"number\" name=\"cost\" id=\"cost\" placeholder=\"Reciept Total\" \n                    value={expense.cost}\n                    onChange={handleControlledInputChange}/>\n            </FormGroup>\n        </Form>\n        <button\n            onClick={evt => {\n                evt.preventDefault() \n                constructNewExpense()\n            }}\n                className=\"btn btn-primary\">\n                    {expensePathId ?\"Save\" :\"Submit\"}\n        </button>\n        </>\n        )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseDetail.js",["117","118","119","120","121"],"import React, { useContext, useEffect, useState, useMemo } from \"react\"\nimport { ExpenseContext } from \"./ExpenseProvider.js\"\n\nexport const ExpenseDetails = (props) => {\n    const { singleExpense, getSingleExpense, deleteExpense } = useContext(ExpenseContext)\n\n    useEffect(() => {\n        const expenseId = parseInt(window.location.pathname.split('/')[2])\n        getSingleExpense(expenseId)\n    }, {})\n\n    console.log(singleExpense)\n\n    const delete_prompt = (id) => {\n        var retVal = window.confirm(\"This action will permanently delete the expense. Are you sure?\");\n        if( retVal == true ) {\n            deleteExpense(id)\n            props.history.push(\"/expenses\")\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n    <>\n        <h3>Expense Detail</h3>\n            <h4>Supply Type</h4>\n            <div>{singleExpense.supply_type.name}</div>\n            <h4>Date Of Purchase</h4>\n            <div>{singleExpense.date_purchased}</div>\n            <h4>Total Amount</h4>\n            <div>{singleExpense.cost}</div>\n            <div className=\"expense__edit\">\n                <button className=\"btn btn-3\"\n                    onClick={() => props.history.push(`/expenses/${singleExpense.id}/edit`)}\n                    >Edit</button></div>\n            <button className=\"btn\" onClick={() => delete_prompt(singleExpense.id)}>Delete</button>\n    </>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemDetail.js",["122","123","124"],"import React, { useContext, useEffect} from \"react\"\nimport { ListedItemContext } from \"./ListedItemProvider.js\"\n\nexport const ListedItemDetails = (props) => {\n    const { singleListedItem, getSingleListedItem, deleteListedItem } = useContext(ListedItemContext)\n\n    useEffect(() => {\n        const listedItemId = parseInt(window.location.pathname.split('/')[2])\n        getSingleListedItem(listedItemId)\n    }, {})\n\n    const delete_prompt = (id) => {\n        var retVal = window.confirm(\"This action will permanently delete the item. Are you sure?\");\n        if( retVal == true ) {\n            deleteListedItem(id)\n            props.history.push(\"/expenses\")\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n    <>\n        <h2>Listed Item Detail</h2>\n            <h3>Item Name</h3>\n            <div>{singleListedItem.title}{singleListedItem.unique_item_id}</div>\n            <h4>Listing Type</h4>\n            <div>{singleListedItem.listing_type.name}</div>\n            <h4>Category</h4>\n            <div>{singleListedItem.category.name}</div>\n            <h5>Item Cost</h5>\n            <div>{singleListedItem.item_cost}</div>\n            <h5>Item Weight</h5>\n            <div>{singleListedItem.item_weight}</div>\n            <h5>Number of Days Listed</h5>\n            <div>{singleListedItem.daysListed}</div>\n            <h5>Listing Fee</h5>\n            <div>{singleListedItem.listing_fee}</div>\n            <h5>Notes</h5>\n            <div>{singleListedItem.notes}</div>\n            <div className=\"expense__edit\">\n        <button className=\"btn btn-3\"\n            onClick={() => props.history.push(`/listedItems/${singleListedItem.id}/edit`)}\n            >Edit</button></div>\n        <button className=\"btn\" onClick={() => delete_prompt(singleListedItem.id)}>Delete</button>\n    </>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemDetail.js",["125","126","127"],"import React, { useContext, useEffect} from \"react\"\nimport { SoldItemContext } from \"./SoldItemProvider.js\"\n\nexport const SoldItemDetails = (props) => {\n    const { singleSoldItem, getSingleSoldItem, editSoldItem } = useContext(SoldItemContext)\n\n    useEffect(() => {\n        const soldItemId = parseInt(window.location.pathname.split('/')[2])\n        getSingleSoldItem(soldItemId)\n    }, {})\n\n    console.log(singleSoldItem)\n\n    return (\n    <>\n        <h2>Sold Item Detail</h2>\n            <h3>Item Name</h3>\n            <div>{singleSoldItem.title}{singleSoldItem.unique_item_id}<div>Sold:{singleSoldItem.sold_date}</div></div>\n            <h4>Category</h4>\n            <div>{singleSoldItem.category.name}</div>\n            <h4>Listing Type</h4>\n            <div>{singleSoldItem.listing_type.name}</div>\n            <h5>Item Weight</h5>\n            <div>{singleSoldItem.item_weight}</div>\n            <h5>Total Profit</h5>\n            <div>${singleSoldItem.profit_per_item}</div>\n            <h5>Item Cost</h5>\n            <div>${singleSoldItem.item_cost}</div>\n            <h5>Item Paid</h5>\n            <div>${singleSoldItem.item_paid}</div>\n            <h5>Shipping Cost</h5>\n            <div>${singleSoldItem.shipping_cost}</div>\n            <h5>Shipping Paid</h5>\n            <div>${singleSoldItem.shipping_paid}</div>\n            <h5>Listing Fee</h5>\n            <div>${singleSoldItem.listing_fee}</div>\n            <h5>Final Value Fee</h5>\n            <div>${singleSoldItem.final_value_fee}</div>\n            <h5>Notes</h5>\n            <div>{singleSoldItem.notes}</div>\n    </>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseChart.js",["128","129","130","131"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitChart.js",["132","133","134","135"],"import React, { useContext, useEffect, useState, useMemo } from \"react\"\nimport { ProfitContext } from \"./ProfitProvider.js\"\nimport { Pie } from \"react-chartjs-2\";\n\nexport const ProfitListingTypeChart = (props) => {\n    const { profitListingTypes, getProfitByListingType } = useContext(ProfitContext)\n\n    useEffect(() => {\n        getProfitByListingType()\n    }, [])\n\n    const labels = profitListingTypes.map(plt => {\n        return plt.name\n    })\n\n    const data = profitListingTypes.map(plt => {\n        return plt.profit\n    })\n    const piedata = {\n        labels: labels,\n        datasets: [{\n            label: \"Listing Types\",\n            data: data,\n            backgroundColor: \n            [\n                \"rgb(63, 191, 191)\", \n                \"rgb(63, 63, 191)\",\n                \"rgb(127, 63, 191)\",\n                \"rgb(191, 63, 127)\"\n            ]\n        }]\n    }\n    \n    return (\n        <div>\n            <h3>Profit By Listing Types</h3>\n            <Pie data={piedata} />\n        </div>\n    )\n}\n\nexport const ProfitCategoriesChart = (props) => {\n    const { profitCategories, getProfitByCategories } = useContext(ProfitContext)\n\n    useEffect(() => {\n        getProfitByCategories()\n    }, [])\n\n    const labels = profitCategories.map(plt => {\n        return plt.name\n    })\n\n    const data = profitCategories.map(plt => {\n        return plt.profit\n    })\n    const piedata = {\n        labels: labels,\n        datasets: [{\n            label: \"Categories\",\n            data: data,\n            backgroundColor: \n            [\n                \"rgb(63, 191, 191)\", \n                \"rgb(63, 63, 191)\",\n                \"rgb(127, 63, 191)\",\n                \"rgb(191, 63, 127)\",\n                \"rgb(191, 63, 63)\",\n                \"rgb(191, 191, 63)\",\n                \"rgb(127, 191, 63)\",\n                \"rgb(63, 191, 63)\",\n                \"rgb(38, 114, 38)\"\n            ]\n        }]\n    }\n    \n    return (\n        <div>\n            <h3>Profit By Categories</h3>\n            <Pie data={piedata} />\n        </div>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitProvider.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":21,"column":8,"nodeType":"146","endLine":21,"endColumn":10,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":25,"column":8,"nodeType":"149","endLine":25,"endColumn":20},{"ruleId":"144","severity":1,"message":"150","line":25,"column":8,"nodeType":"149","endLine":25,"endColumn":20,"suggestions":"151"},{"ruleId":"144","severity":1,"message":"152","line":13,"column":8,"nodeType":"146","endLine":13,"endColumn":10,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"154","line":1,"column":50,"nodeType":"142","messageId":"143","endLine":1,"endColumn":57},{"ruleId":"144","severity":1,"message":"155","line":12,"column":8,"nodeType":"146","endLine":12,"endColumn":10,"suggestions":"156"},{"ruleId":"140","severity":1,"message":"157","line":4,"column":11,"nodeType":"142","messageId":"143","endLine":4,"endColumn":17},{"ruleId":"140","severity":1,"message":"158","line":4,"column":36,"nodeType":"142","messageId":"143","endLine":4,"endColumn":41},{"ruleId":"140","severity":1,"message":"159","line":4,"column":50,"nodeType":"142","messageId":"143","endLine":4,"endColumn":58},{"ruleId":"144","severity":1,"message":"160","line":23,"column":8,"nodeType":"146","endLine":23,"endColumn":10,"suggestions":"161"},{"ruleId":"144","severity":1,"message":"148","line":27,"column":8,"nodeType":"149","endLine":27,"endColumn":20},{"ruleId":"144","severity":1,"message":"150","line":27,"column":8,"nodeType":"149","endLine":27,"endColumn":20,"suggestions":"162"},{"ruleId":"140","severity":1,"message":"157","line":4,"column":11,"nodeType":"142","messageId":"143","endLine":4,"endColumn":17},{"ruleId":"140","severity":1,"message":"158","line":4,"column":36,"nodeType":"142","messageId":"143","endLine":4,"endColumn":41},{"ruleId":"140","severity":1,"message":"159","line":4,"column":50,"nodeType":"142","messageId":"143","endLine":4,"endColumn":58},{"ruleId":"144","severity":1,"message":"163","line":16,"column":8,"nodeType":"146","endLine":16,"endColumn":10,"suggestions":"164"},{"ruleId":"144","severity":1,"message":"148","line":20,"column":8,"nodeType":"149","endLine":20,"endColumn":23},{"ruleId":"144","severity":1,"message":"165","line":20,"column":8,"nodeType":"149","endLine":20,"endColumn":23,"suggestions":"166"},{"ruleId":"140","severity":1,"message":"167","line":1,"column":40,"nodeType":"142","messageId":"143","endLine":1,"endColumn":48},{"ruleId":"140","severity":1,"message":"154","line":1,"column":50,"nodeType":"142","messageId":"143","endLine":1,"endColumn":57},{"ruleId":"144","severity":1,"message":"148","line":10,"column":8,"nodeType":"149","endLine":10,"endColumn":10},{"ruleId":"144","severity":1,"message":"168","line":10,"column":8,"nodeType":"149","endLine":10,"endColumn":10,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":16,"column":20,"nodeType":"172","messageId":"173","endLine":16,"endColumn":22},{"ruleId":"144","severity":1,"message":"148","line":10,"column":8,"nodeType":"149","endLine":10,"endColumn":10},{"ruleId":"144","severity":1,"message":"174","line":10,"column":8,"nodeType":"149","endLine":10,"endColumn":10,"suggestions":"175"},{"ruleId":"170","severity":1,"message":"171","line":14,"column":20,"nodeType":"172","messageId":"173","endLine":14,"endColumn":22},{"ruleId":"140","severity":1,"message":"176","line":5,"column":48,"nodeType":"142","messageId":"143","endLine":5,"endColumn":60},{"ruleId":"144","severity":1,"message":"148","line":10,"column":8,"nodeType":"149","endLine":10,"endColumn":10},{"ruleId":"144","severity":1,"message":"177","line":10,"column":8,"nodeType":"149","endLine":10,"endColumn":10,"suggestions":"178"},{"ruleId":"140","severity":1,"message":"167","line":1,"column":40,"nodeType":"142","messageId":"143","endLine":1,"endColumn":48},{"ruleId":"140","severity":1,"message":"154","line":1,"column":50,"nodeType":"142","messageId":"143","endLine":1,"endColumn":57},{"ruleId":"144","severity":1,"message":"179","line":10,"column":8,"nodeType":"146","endLine":10,"endColumn":10,"suggestions":"180"},{"ruleId":"144","severity":1,"message":"181","line":41,"column":8,"nodeType":"146","endLine":41,"endColumn":10,"suggestions":"182"},{"ruleId":"140","severity":1,"message":"167","line":1,"column":40,"nodeType":"142","messageId":"143","endLine":1,"endColumn":48},{"ruleId":"140","severity":1,"message":"154","line":1,"column":50,"nodeType":"142","messageId":"143","endLine":1,"endColumn":57},{"ruleId":"144","severity":1,"message":"183","line":10,"column":8,"nodeType":"146","endLine":10,"endColumn":10,"suggestions":"184"},{"ruleId":"144","severity":1,"message":"185","line":47,"column":8,"nodeType":"146","endLine":47,"endColumn":10,"suggestions":"186"},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'SoldItemContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListedItems'. Either include it or remove the dependency array.","ArrayExpression",["189"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression","React Hook useEffect has a missing dependency: 'getItemInEditMode'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has a missing dependency: 'getSoldItems'. Either include it or remove the dependency array.",["191"],"'useMemo' is defined but never used.","React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.",["192"],"'Button' is defined but never used.","'Label' is defined but never used.","'FormText' is defined but never used.","React Hook useEffect has missing dependencies: 'getCategories', 'getListingTypes', and 'getWeightTypes'. Either include them or remove the dependency array.",["193"],["194"],"React Hook useEffect has a missing dependency: 'getSupplyTypes'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'getExpenseInEditMode'. Either include it or remove the dependency array.",["196"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getSingleExpense'. Either include it or remove the dependency array.",["197"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getSingleListedItem'. Either include it or remove the dependency array.",["198"],"'editSoldItem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSingleSoldItem'. Either include it or remove the dependency array.",["199"],"React Hook useEffect has a missing dependency: 'getExpensesBySupplyType'. Either include it or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'getExpensesByMonth'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has a missing dependency: 'getProfitByListingType'. Either include it or remove the dependency array.",["202"],"React Hook useEffect has a missing dependency: 'getProfitByCategories'. Either include it or remove the dependency array.",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"206","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [getListedItems]",{"range":"233","text":"234"},"Update the dependencies array to be: [getItemInEditMode]",{"range":"235","text":"236"},"Update the dependencies array to be: [getSoldItems]",{"range":"237","text":"238"},"Update the dependencies array to be: [getExpenses]",{"range":"239","text":"240"},"Update the dependencies array to be: [getCategories, getListingTypes, getWeightTypes]",{"range":"241","text":"242"},{"range":"243","text":"236"},"Update the dependencies array to be: [getSupplyTypes]",{"range":"244","text":"245"},"Update the dependencies array to be: [getExpenseInEditMode]",{"range":"246","text":"247"},"Update the dependencies array to be: [getSingleExpense]",{"range":"248","text":"249"},"Update the dependencies array to be: [getSingleListedItem]",{"range":"250","text":"251"},"Update the dependencies array to be: [getSingleSoldItem]",{"range":"252","text":"253"},"Update the dependencies array to be: [getExpensesBySupplyType]",{"range":"254","text":"255"},"Update the dependencies array to be: [getExpensesByMonth]",{"range":"256","text":"257"},"Update the dependencies array to be: [getProfitByListingType]",{"range":"258","text":"259"},"Update the dependencies array to be: [getProfitByCategories]",{"range":"260","text":"261"},[735,737],"[getListedItems]",[797,809],"[getItemInEditMode]",[422,424],"[getSoldItems]",[384,386],"[getExpenses]",[881,883],"[getCategories, getListingTypes, getWeightTypes]",[943,955],[601,603],"[getSupplyTypes]",[670,685],"[getExpenseInEditMode]",[401,403],"[getSingleExpense]",[411,413],"[getSingleListedItem]",[389,391],"[getSingleSoldItem]",[373,375],"[getExpensesBySupplyType]",[1072,1074],"[getExpensesByMonth]",[363,365],"[getProfitByListingType]",[1212,1214],"[getProfitByCategories]"]