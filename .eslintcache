[{"/home/mswinkels/workspace/finalcapstoneclient/src/index.js":"1","/home/mswinkels/workspace/finalcapstoneclient/src/components/ProfitTracker.js":"2","/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Login.js":"3","/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Register.js":"4","/home/mswinkels/workspace/finalcapstoneclient/src/components/ApplicationViews.js":"5","/home/mswinkels/workspace/finalcapstoneclient/src/components/nav/NavBar.js":"6","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemList.js":"7","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemProvider.js":"8","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemProvider.js":"9","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemList.js":"10","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseList.js":"11","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseProvider.js":"12","/home/mswinkels/workspace/finalcapstoneclient/src/components/TypesProvider.js":"13","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemsForm.js":"14","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpensesForm.js":"15","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseDetail.js":"16","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemDetail.js":"17","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemDetail.js":"18","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseChart.js":"19","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitChart.js":"20","/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitProvider.js":"21","/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemForm.js":"22","/home/mswinkels/workspace/finalcapstoneclient/src/components/dashboard/Dashboard.js":"23"},{"size":412,"mtime":1609451054237,"results":"24","hashOfConfig":"25"},{"size":874,"mtime":1609518653240,"results":"26","hashOfConfig":"25"},{"size":2664,"mtime":1610139576068,"results":"27","hashOfConfig":"25"},{"size":3973,"mtime":1609353188288,"results":"28","hashOfConfig":"25"},{"size":3468,"mtime":1609950731355,"results":"29","hashOfConfig":"25"},{"size":3722,"mtime":1609901629426,"results":"30","hashOfConfig":"25"},{"size":9654,"mtime":1610291948535,"results":"31","hashOfConfig":"25"},{"size":2357,"mtime":1609966684872,"results":"32","hashOfConfig":"25"},{"size":1921,"mtime":1609950118464,"results":"33","hashOfConfig":"25"},{"size":6835,"mtime":1610128731740,"results":"34","hashOfConfig":"25"},{"size":3949,"mtime":1610142523962,"results":"35","hashOfConfig":"25"},{"size":3097,"mtime":1609715400013,"results":"36","hashOfConfig":"25"},{"size":1859,"mtime":1609950111884,"results":"37","hashOfConfig":"25"},{"size":9457,"mtime":1610243623881,"results":"38","hashOfConfig":"25"},{"size":4340,"mtime":1610056938769,"results":"39","hashOfConfig":"25"},{"size":2250,"mtime":1610061121340,"results":"40","hashOfConfig":"25"},{"size":4213,"mtime":1610292531524,"results":"41","hashOfConfig":"25"},{"size":5410,"mtime":1610292624937,"results":"42","hashOfConfig":"25"},{"size":2375,"mtime":1610291588136,"results":"43","hashOfConfig":"25"},{"size":5151,"mtime":1610292091671,"results":"44","hashOfConfig":"25"},{"size":1947,"mtime":1609728390323,"results":"45","hashOfConfig":"25"},{"size":7145,"mtime":1609947099848,"results":"46","hashOfConfig":"25"},{"size":7397,"mtime":1610291865530,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"jwzpcx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mswinkels/workspace/finalcapstoneclient/src/index.js",[],["101","102"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/ProfitTracker.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Login.js",["103"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Auth.css\"\nimport logo from \"../images/logo.png\"\n\n\nexport const Login = props => {\n    const email = React.createRef()\n    const password = React.createRef()\n    const invalidDialog = React.createRef()\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        return fetch(\"http://127.0.0.1:8000/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: email.current.value,\n                password: password.current.value\n            })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (\"valid\" in res && res.valid && \"token\" in res) {\n                    localStorage.setItem( \"user_token\", res.token )\n                    props.history.push(\"/\")\n                }\n                else {\n                    invalidDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <main className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={invalidDialog}>\n                <div>Email or password was not valid.</div>\n                <button className=\"button--close\" onClick={e => invalidDialog.current.close()}>Close</button>\n            </dialog>\n            <section>\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h1 className=\"login__title\">Profit Tracker<img src={logo} className=\"login__logo\" /></h1>\n                    <h2>Please sign in</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\" id=\"email\" className=\"form-control\"  placeholder=\"Email address\" required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <label htmlFor=\"inputPassword\"> Password </label>\n                        <input ref={password} type=\"password\" id=\"password\" className=\"form-control\"  placeholder=\"Password\" required />\n                    </fieldset>\n                    <fieldset style={{\n                        textAlign:\"center\"\n                    }}>\n                        <button className=\"btn btn-1 btn-sep icon-send\" type=\"submit\">Sign In</button>\n                    </fieldset>\n                </form>\n            </section>\n            <section className=\"link--register\">\n                <Link to=\"/register\">Not a member yet?</Link>\n            </section>\n        </main>\n    )\n}\n","/home/mswinkels/workspace/finalcapstoneclient/src/components/auth/Register.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/ApplicationViews.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/nav/NavBar.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemList.js",["104","105","106","107","108","109","110"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemList.js",["111","112","113","114","115","116","117","118","119","120","121"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { SoldItemContext } from \"./SoldItemProvider.js\"\nimport { Table, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\"\nimport \"./SoldItems.css\"\nimport sort from \"../images/sort.png\";\n\nexport const SoldItemList = (props) => {\n    const { soldItems, getSoldItems } = useContext(SoldItemContext)\n\n    const [data, setData] = useState([]);\n    const [toggle, setToggle] = useState(false)\n\n    useEffect(() => {\n        getSoldItems()\n    }, [])\n\n    useEffect(() => {\n        setData(soldItems)\n    }, [soldItems])\n\n\n\n    const sortProfit = () => {\n        const sortedData = data.slice().sort((a, b) => {\n            if(toggle === false){\n                setToggle(true)\n                return a.profit_per_item - b.profit_per_item\n            }\n            else if(toggle === true){\n                setToggle(false)\n                return b.profit_per_item - a.profit_per_item\n            }\n        })\n        setData(sortedData);\n    };\n\n    const sortProfitPercentage = () => {\n        const sortedData = data.slice().sort((a, b) => {\n            if(toggle === false){\n                setToggle(true)\n                return a.profit_per_item_percentage - b.profit_per_item_percentage\n            }\n            else if(toggle === true){\n                setToggle(false)\n                return b.profit_per_item_percentage - a.profit_per_item_percentage\n            }\n        })\n        setData(sortedData);\n    };\n\n    const sortItemPaid = () => {\n        const sortedData = data.slice().sort((a, b) => {\n            if(toggle === false){\n                setToggle(true)\n                return a.item_paid - b.item_paid\n            }\n            else if(toggle === true){\n                setToggle(false)\n                return b.item_paid - a.item_paid\n            }\n        })\n        setData(sortedData);\n    };\n\n    const sortItemCost = () => {\n        const sortedData = data.slice().sort((a, b) => {\n            if(toggle === false){\n                setToggle(true)\n                return a.item_cost - b.item_cost\n            }\n            else if(toggle === true){\n                setToggle(false)\n                return b.item_cost - a.item_cost\n            }\n        })\n        setData(sortedData);\n    };\n\n    const sortDate = () => {\n        const sortedData = data.slice().sort((a, b) => {\n            if(toggle === false){\n                setToggle(true)\n                return new Date(a.dateSoldConverted) - new Date(b.dateSoldConverted)\n            }\n            else if(toggle === true){\n                setToggle(false)\n                return new Date(b.dateSoldConverted) - new Date(a.dateSoldConverted)\n            }\n        })\n        setData(sortedData);\n    };\n\n    return (\n        <div className=\"sold_items__main\">\n            <div className=\"table__main_sold_items table__main\">\n                <div className=\"table__title\">SOLD ITEMS</div>\n                <Table striped bordered responsive className=\"table__div\">\n                    <thead>\n                        <tr>\n                            <th>Item Name</th>\n                            <th>\n                                <div className=\"table__sort\">\n                                    Sold Date\n                                    <Button id=\"sorting__button\" color=\"outline-success\" onClick={() => sortDate()}>\n                                        <img className=\"table__image\" src={sort} width={25} height={25} />\n                                    </Button>\n                                </div>\n                            </th>\n                            <th>Category</th>\n                            <th>\n                                <div className=\"table__sort\">\n                                    Item Cost\n                                    <Button id=\"sorting__button\" color=\"outline-success\" onClick={() => sortItemCost()}>\n                                        <img className=\"table__image\" src={sort} width={25} height={25} />\n                                    </Button>\n                                </div>\n                            </th>\n                            <th>Shipping Cost</th>\n                            <th>\n                                <div className=\"table__sort\">\n                                    Item Paid\n                                    <Button id=\"sorting__button\" color=\"outline-success\" onClick={() => sortItemPaid()}>\n                                        <img className=\"table__image\" src={sort} width={25} height={25} />\n                                    </Button>\n                                </div>\n                            </th>\n                            <th>Shipping Paid</th>\n                            <th>\n                                <div className=\"table__sort\">\n                                    Total Profit\n                                    <Button id=\"sorting__button\" color=\"outline-success\" onClick={() => sortProfit()}>\n                                        <img className=\"table__image\" src={sort} width={25} height={25} />\n                                    </Button>\n                                </div>\n                            </th>\n                            <th>\n                                <div className=\"table__sort\">\n                                    Percentage Of Profit\n                                    <Button id=\"sorting__button\" color=\"outline-success\" onClick={() => sortProfitPercentage()}>\n                                        <img className=\"table__image\" src={sort} width={25} height={25} />\n                                    </Button>\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map(si => {\n                            return(\n                                <tr>\n                                    <td><Link to={{pathname:`/solditems/${si.id}`}}>{si.title}</Link></td>\n                                    <td>{si.dateSoldConverted}</td>\n                                    <td>{si.category.name}</td>\n                                    <td>${si.item_cost.toFixed(2)}</td>\n                                    <td>${si.shipping_cost.toFixed(2)}</td>\n                                    <td>${si.item_paid.toFixed(2)}</td>\n                                    <td>${si.shipping_paid.toFixed(2)}</td>\n                                    <td>${si.profit_per_item.toFixed(2)}</td>\n                                    <td>{si.profit_per_item_percentage.toFixed(2)}%</td>\n                                </tr>\n                            )\n                            })}\n                    </tbody>\n                </Table>\n            </div>\n        </div>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseList.js",["122","123","124","125","126","127"],"import React, { useContext, useEffect, useState, useMemo } from \"react\"\nimport { ExpenseContext } from \"./ExpenseProvider.js\"\nimport { Table, Button } from \"reactstrap\";\nimport {ExpenseChart} from \"./ExpenseChart\"\nimport \"./Expenses.css\"\nimport sort from \"../images/sort.png\";\n\nexport const ExpenseList = (props) => {\n    const { expenses, getExpenses } = useContext(ExpenseContext)\n\n    const [data, setData] = useState(expenses);\n    const [toggle, setToggle] = useState(false)\n\n    useEffect(() => {\n        getExpenses()\n    }, [])\n    useEffect(() => {\n        setData(expenses)\n    }, [expenses])\n\n\n\n    const sortCost = () => {\n        const sortedData = data.slice().sort((a, b) => {\n            if(toggle === false){\n                setToggle(true)\n                return a.cost - b.cost\n            }\n            else if(toggle === true){\n                setToggle(false)\n                return b.cost - a.cost\n            }\n        })\n        setData(sortedData);\n    };\n\n    const sortDate = () => {\n        const sortedData = data.slice().sort((a, b) => {\n            if(toggle === false){\n                setToggle(true)\n                return new Date(a.date_purchased) - new Date(b.date_purchased)\n            }\n            else if(toggle === true){\n                setToggle(false)\n                return new Date(b.date_purchased) - new Date(a.date_purchased)\n            }\n        })\n        setData(sortedData);\n    };\n\n    \n    return(\n        <div className=\"expense__main\">\n            <div className=\"chart__main_expense\">\n                <ExpenseChart {...props} />\n            </div>\n            <div className=\"expense__main\">\n                <div className=\"table__main_expense table__main\">\n                    <div className=\"table__title\">EXPENSES</div>\n                    <Table className=\"table__main_expenses\" bordered responsive>\n                        <thead>\n                            <tr>\n                                <th>                            \n                                    <div className=\"table__sort\">\n                                        Date\n                                        <Button id=\"sorting__button\" color=\"outline-success\" onClick={() => sortDate()}>\n                                            <img className=\"table__image\" src={sort} width={25} height={25} />\n                                        </Button>\n                                    </div>\n                                </th>\n                                <th>Supply Type</th>\n                                <th>\n                                    <div className=\"table__sort\">\n                                        Amount Spent\n                                        <Button id=\"sorting__button\" color=\"outline-success\" onClick={() => sortCost()}>\n                                            <img className=\"table__image\" src={sort} width={25} height={25} />\n                                        </Button>\n\n                                    </div>\n                                </th>\n                                <th>View Expense</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {data.map(e => {\n                                return(\n                                    <tr>\n                                        <td>{e.dateExpenseConverted}</td>\n                                        <td>{e.supply_type.name}</td>\n                                        <td>${e.cost.toFixed(2)}</td>\n                                        <td><Button className=\"table__button\" color=\"success\" type=\"button\" onClick={() => props.history.push(`/expenses/${e.id}`)}>View</Button></td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n        </div>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/TypesProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemsForm.js",["128","129","130","131"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpensesForm.js",["132","133","134","135","136"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { TypesContext } from \"../TypesProvider\";\nimport { ExpenseContext } from \"./ExpenseProvider\";\nimport {  Button, Form, FormGroup, Label, Input, FormText} from \"reactstrap\";\nimport \"./Expenses.css\"\n\nexport const ExpenseForm = props => {\n    const{addExpense, expenses, editExpense} = useContext(ExpenseContext)\n    const{supplyTypes, getSupplyTypes} = useContext(TypesContext)\n\n    const expensePathId = parseInt(window.location.pathname.split('/')[2])\n\n    const [expense, setExpense] = useState({})\n\n    useEffect(() => {\n        getSupplyTypes()\n    }, [])\n    \n    useEffect(() => {\n        if(expensePathId){\n            getExpenseInEditMode()\n        }\n    }, {expensePathId})\n\n    const handleControlledInputChange = (event) => {\n        const newExpenseState = Object.assign({}, expense)\n        newExpenseState[event.target.name] = event.target.value\n        setExpense(newExpenseState)\n    }\n\n    const getExpenseInEditMode = () => {\n            const selectedExpense = expenses.find(expense => expense.id === expensePathId) || {}\n            const selectedExpenseUnnested = {\n                id: selectedExpense.id,\n                supply_type_id: parseInt(selectedExpense.supply_type.id),\n                date_purchased: selectedExpense.date_purchased,\n                cost: selectedExpense.cost,\n                image: \"\"\n            }\n            setExpense(selectedExpenseUnnested)\n    }\n\n    const constructNewExpense = () => {\n        if (expensePathId) {\n            editExpense({\n                id: expense.id,\n                supply_type_id: parseInt(expense.supply_type_id),\n                date_purchased: expense.date_purchased,\n                cost: expense.cost,\n                image: \"\"\n            })\n\n                .then(() => props.history.push(\"/expenses\"))\n        } else {\n            addExpense({\n                supply_type_id: parseInt(expense.supply_type_id),\n                date_purchased: expense.date_purchased,\n                cost: expense.cost,\n                image: \"\"\n            })\n                .then(() => props.history.push(\"/expenses\"))\n        }\n    }\n\n    return(\n        <>\n        <div className=\"expenseform\">\n            <div className=\"form__main\">\n                <Form className=\"form__div\">\n                    <div className=\"center_item_title_form\">\n                        <h2 className=\"form__title\">{expensePathId ?\"Edit Expense\" :\"Add New Expense\"}</h2>\n                    </div>\n                    <FormGroup className=\"form__detail\">\n                        <select name=\"supply_type_id\" id=\"supply_type\" value={expense.supply_type_id}\n                            onChange={handleControlledInputChange}>\n                            <option value=\"\">Select Supply Type</option>\n                            {supplyTypes.map(st => (\n                                <option key={st.id} value={st.id}>\n                                    {st.name}\n                                </option>\n                            ))}\n                        </select>\n                    </FormGroup>\n                    <FormGroup className=\"form__detail\">\n                        <Input type=\"date\" name=\"date_purchased\" id=\"date_purchased\" placeholder=\"Select Date\" \n                            value={expense.date_purchased}\n                            onChange={handleControlledInputChange}/>\n                    </FormGroup>\n                    <FormGroup className=\"form__detail\">\n                        <Input type=\"number\" name=\"cost\" id=\"cost\" placeholder=\"Reciept Total\" \n                            value={expense.cost}\n                            onChange={handleControlledInputChange}/>\n                    </FormGroup>\n                    <div className=\"form__buttons\">\n                        <Button color=\"success\"\n                            onClick={evt => {\n                                evt.preventDefault() \n                                constructNewExpense()\n                            }}\n                                className=\"form__expense_button table__button\">\n                                    {expensePathId ?\"Save\" :\"Submit\"}\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n        </>\n        )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseDetail.js",["137","138","139","140","141"],"import { Button } from \"reactstrap\"\nimport React, { useContext, useEffect, useState, useMemo } from \"react\"\nimport { ExpenseContext } from \"./ExpenseProvider.js\"\nimport \"./Expenses.css\"\n\nexport const ExpenseDetails = (props) => {\n    const { singleExpense, getSingleExpense, deleteExpense } = useContext(ExpenseContext)\n\n    useEffect(() => {\n        const expenseId = parseInt(window.location.pathname.split('/')[2])\n        getSingleExpense(expenseId)\n    }, {})\n\n    console.log(singleExpense)\n\n    const delete_prompt = (id) => {\n        var retVal = window.confirm(\"This action will permanently delete the expense. Are you sure?\");\n        if( retVal == true ) {\n            deleteExpense(id)\n            props.history.push(\"/expenses\")\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n    <div className=\"expensedetail\">\n        <div className=\"center_item_details\">\n            <h3 className=\"detail__main_title\">Expense Detail</h3>\n        </div>\n        <div className=\"center_item_details\">\n            <div className=\"detail__div\">\n                <h4 className=\"detail__title\">Supply Type</h4>\n                <div className=\"detail__data\">{singleExpense.supply_type.name}</div>\n            </div>\n        </div>\n        <div className=\"center_item_details\">\n            <div className=\"detail__div\">\n                <h4 className=\"detail__title\">Date Of Purchase</h4>\n                <div className=\"detail__data\">{singleExpense.dateExpenseConverted}</div>\n            </div>\n        </div>\n        <div className=\"center_item_details\">\n            <div className=\"detail__div\">\n                <h4 className=\"detail__title\">Total Amount</h4>\n                <div className=\"detail__data\">${singleExpense.cost}</div>\n            </div>\n        </div>\n            <div className=\"expense_detail__buttons center_item_details\">\n                    <Button color=\"success\" className=\"btn btn-3\"\n                        onClick={() => props.history.push(`/expenses/${singleExpense.id}/edit`)}\n                        >Edit</Button>\n                    <Button color=\"success\" className=\"btn\" onClick={() => delete_prompt(singleExpense.id)}>Delete</Button>\n            </div>\n    </div>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/listedItems/ListedItemDetail.js",["142","143"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemDetail.js",["144","145"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/expenses/ExpenseChart.js",["146","147","148"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitChart.js",["149","150","151","152","153","154"],"/home/mswinkels/workspace/finalcapstoneclient/src/components/profit/ProfitProvider.js",[],"/home/mswinkels/workspace/finalcapstoneclient/src/components/soldItems/SoldItemForm.js",["155","156","157","158","159"],"import React, { useContext, useEffect, useState} from \"react\"\nimport { SoldItemContext } from \"./SoldItemProvider.js\"\nimport {  Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport \"./SoldItems.css\"\n\nexport const SoldItemForm = (props) => {\n    const { singleSoldItem, getSingleSoldItem, editSoldItem, soldItems } = useContext(SoldItemContext)\n    const [item, setItem] = useState({})\n\n    const soldItemId = parseInt(window.location.pathname.split('/')[2])\n\n    useEffect(() => {\n        getSingleSoldItem(soldItemId)\n    }, [])\n\n    useEffect(() => {\n        getItemInEditMode()\n    }, {soldItemId})\n\n    const getItemInEditMode = () => {\n        const selectedItem = soldItems.find(item => item.id === soldItemId) || {}\n        setItem(selectedItem)\n    }\n\n    const handleControlledInputChange = (event) => {\n        const newItemState = Object.assign({}, item)\n        newItemState[event.target.name] = event.target.value\n        setItem(newItemState)\n    }\n\n    const updateSoldItem = () => {\n        editSoldItem({\n            id: item.id,\n            item_paid: parseFloat(item.item_paid),\n            shipping_cost: parseFloat(item.shipping_cost),\n            shipping_paid: parseFloat(item.shipping_paid),\n            final_value_fee: parseFloat(item.final_value_fee),\n            sold_date: item.sold_date,\n            returned: false,\n            notes: item.notes\n        })\n            .then(() => props.history.push(\"/soldItems\"))\n    }\n\n    return (\n    <>\n    <div className=\"solditemdetail\">\n        <div className=\"center_item_details\">\n            <div className=\"detail__main_title_div\">\n                <div className=\"detail__main_title_sold\">\n                    <div className=\"detail__sold_title\">{singleSoldItem.title}(Edit)</div>\n                    <div className=\"detail__sold_id\">#{singleSoldItem.unique_item_id}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details bottom_row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Category</h5>\n                    <div className=\"listed_detail__data\">{singleSoldItem.category.name}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Listing Type</h5>\n                    <div className=\"listed_detail__data\">{singleSoldItem.listing_type.name}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Weight</h5>\n                    <div className=\"listed_detail__data\">{singleSoldItem.item_weight}</div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row__details bottom_row__details\">\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Total Profit</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.profit_per_item}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Item Cost</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.item_cost}</div>\n                </div>\n            </div>\n            <div className=\"center_item_details\">\n                <div className=\"detail__div_sold_bottom_row\">\n                    <h5 className=\"listed_detail__title\">Listing Fee</h5>\n                    <div className=\"listed_detail__data\">${singleSoldItem.listing_fee}</div>\n                </div>\n            </div>\n        </div>\n            <Form className=\"form__div_sold\">\n                <div className=\"form__rows\">\n                    <FormGroup className=\"form__detail_sold\">\n                        <div className=\"form__detail_placeholder\">Sold Date</div>\n                        <Input type=\"date\" name=\"sold_date\" id=\"sold_date\" placeholder=\"Choose Item's Sold Date\"\n                            value={item.sold_date}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                    <FormGroup className=\"form__detail_sold\">\n                    <div className=\"form__detail_placeholder\">Customer Paid For Item</div>\n                        <Input type=\"number\" name=\"item_paid\" id=\"item_paid\" placeholder=\"Update What Customer Paid\"\n                            value={item.item_paid}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                    <FormGroup className=\"form__detail_sold\">\n                    <div className=\"form__detail_placeholder\">Shipping Cost</div>\n                        <Input type=\"number\" name=\"shipping_cost\" id=\"shipping_cost\" placeholder=\"Update How Much You Paid For Shipping\"\n                            value={item.shipping_cost}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                </div>\n                <div className=\"form__rows\">\n                    <FormGroup className=\"form__detail_sold\">\n                    <div className=\"form__detail_placeholder\">Customer Paid For Shipping</div>\n                        <Input type=\"number\" name=\"shipping_paid\" id=\"shipping_paid\" placeholder=\"Update How Much The Customer Paid For Shipping\"\n                            value={item.shipping_paid}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                    <FormGroup className=\"form__detail_sold\">\n                    <div className=\"form__detail_placeholder\">Final Value Fee</div>\n                        <Input type=\"number\" name=\"final_value_fee\" id=\"final_value_fee\" placeholder=\"Update Final Value Fees\"\n                            value={item.final_value_fee}\n                            onChange={handleControlledInputChange} />\n                    </FormGroup>\n                </div>\n                <FormGroup className=\"form__detail_listed form__sold_notes\">\n                <div className=\"form__detail_placeholder\">Notes</div>\n                    <Input type=\"text\" name=\"notes\" id=\"notes\" placeholder=\"Update Notes\"\n                        value={item.notes}\n                        onChange={handleControlledInputChange} />\n                </FormGroup>\n            </Form>\n            <div className=\"form__buttons\">\n                <Button color=\"success\"\n                    onClick={evt => {\n                        evt.preventDefault()\n                        updateSoldItem()\n                    }}\n                        className=\"btn btn-primary\">\n                            Save\n                </Button>\n            </div>\n        </div>\n    </>\n    )\n}","/home/mswinkels/workspace/finalcapstoneclient/src/components/dashboard/Dashboard.js",["160","161","162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":46,"column":64,"nodeType":"170","endLine":46,"endColumn":106},{"ruleId":"171","severity":1,"message":"172","line":1,"column":50,"nodeType":"173","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"175","severity":1,"message":"176","line":20,"column":8,"nodeType":"177","endLine":20,"endColumn":10,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":27,"column":57,"nodeType":"181","messageId":"182","endLine":27,"endColumn":59},{"ruleId":"179","severity":1,"message":"180","line":41,"column":57,"nodeType":"181","messageId":"182","endLine":41,"endColumn":59},{"ruleId":"171","severity":1,"message":"183","line":54,"column":11,"nodeType":"173","messageId":"174","endLine":54,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":97,"column":41,"nodeType":"170","endLine":97,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":106,"column":41,"nodeType":"170","endLine":106,"endColumn":107},{"ruleId":"175","severity":1,"message":"184","line":16,"column":8,"nodeType":"177","endLine":16,"endColumn":10,"suggestions":"185"},{"ruleId":"179","severity":1,"message":"180","line":25,"column":53,"nodeType":"181","messageId":"182","endLine":25,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":39,"column":53,"nodeType":"181","messageId":"182","endLine":39,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":53,"column":53,"nodeType":"181","messageId":"182","endLine":53,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":67,"column":53,"nodeType":"181","messageId":"182","endLine":67,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":81,"column":53,"nodeType":"181","messageId":"182","endLine":81,"endColumn":55},{"ruleId":"168","severity":1,"message":"169","line":106,"column":41,"nodeType":"170","endLine":106,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":115,"column":41,"nodeType":"170","endLine":115,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":124,"column":41,"nodeType":"170","endLine":124,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":133,"column":41,"nodeType":"170","endLine":133,"endColumn":107},{"ruleId":"168","severity":1,"message":"169","line":141,"column":41,"nodeType":"170","endLine":141,"endColumn":107},{"ruleId":"171","severity":1,"message":"172","line":1,"column":50,"nodeType":"173","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"175","severity":1,"message":"186","line":16,"column":8,"nodeType":"177","endLine":16,"endColumn":10,"suggestions":"187"},{"ruleId":"179","severity":1,"message":"180","line":24,"column":53,"nodeType":"181","messageId":"182","endLine":24,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":38,"column":53,"nodeType":"181","messageId":"182","endLine":38,"endColumn":55},{"ruleId":"168","severity":1,"message":"169","line":67,"column":45,"nodeType":"170","endLine":67,"endColumn":111},{"ruleId":"168","severity":1,"message":"169","line":76,"column":45,"nodeType":"170","endLine":76,"endColumn":111},{"ruleId":"171","severity":1,"message":"188","line":4,"column":36,"nodeType":"173","messageId":"174","endLine":4,"endColumn":41},{"ruleId":"171","severity":1,"message":"189","line":4,"column":50,"nodeType":"173","messageId":"174","endLine":4,"endColumn":58},{"ruleId":"175","severity":1,"message":"190","line":22,"column":8,"nodeType":"177","endLine":22,"endColumn":10,"suggestions":"191"},{"ruleId":"175","severity":1,"message":"192","line":29,"column":8,"nodeType":"177","endLine":29,"endColumn":20,"suggestions":"193"},{"ruleId":"171","severity":1,"message":"188","line":4,"column":36,"nodeType":"173","messageId":"174","endLine":4,"endColumn":41},{"ruleId":"171","severity":1,"message":"189","line":4,"column":50,"nodeType":"173","messageId":"174","endLine":4,"endColumn":58},{"ruleId":"175","severity":1,"message":"194","line":17,"column":8,"nodeType":"177","endLine":17,"endColumn":10,"suggestions":"195"},{"ruleId":"175","severity":1,"message":"196","line":23,"column":8,"nodeType":"197","endLine":23,"endColumn":23},{"ruleId":"175","severity":1,"message":"198","line":23,"column":8,"nodeType":"197","endLine":23,"endColumn":23,"suggestions":"199"},{"ruleId":"171","severity":1,"message":"200","line":2,"column":40,"nodeType":"173","messageId":"174","endLine":2,"endColumn":48},{"ruleId":"171","severity":1,"message":"172","line":2,"column":50,"nodeType":"173","messageId":"174","endLine":2,"endColumn":57},{"ruleId":"175","severity":1,"message":"196","line":12,"column":8,"nodeType":"197","endLine":12,"endColumn":10},{"ruleId":"175","severity":1,"message":"201","line":12,"column":8,"nodeType":"197","endLine":12,"endColumn":10,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":18,"column":20,"nodeType":"205","messageId":"206","endLine":18,"endColumn":22},{"ruleId":"175","severity":1,"message":"207","line":13,"column":8,"nodeType":"177","endLine":13,"endColumn":10,"suggestions":"208"},{"ruleId":"203","severity":1,"message":"204","line":25,"column":20,"nodeType":"205","messageId":"206","endLine":25,"endColumn":22},{"ruleId":"171","severity":1,"message":"209","line":7,"column":48,"nodeType":"173","messageId":"174","endLine":7,"endColumn":60},{"ruleId":"175","severity":1,"message":"210","line":12,"column":8,"nodeType":"177","endLine":12,"endColumn":10,"suggestions":"211"},{"ruleId":"171","severity":1,"message":"200","line":1,"column":40,"nodeType":"173","messageId":"174","endLine":1,"endColumn":48},{"ruleId":"171","severity":1,"message":"172","line":1,"column":50,"nodeType":"173","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"175","severity":1,"message":"212","line":13,"column":8,"nodeType":"177","endLine":13,"endColumn":10,"suggestions":"213"},{"ruleId":"171","severity":1,"message":"200","line":1,"column":40,"nodeType":"173","messageId":"174","endLine":1,"endColumn":48},{"ruleId":"171","severity":1,"message":"172","line":1,"column":50,"nodeType":"173","messageId":"174","endLine":1,"endColumn":57},{"ruleId":"171","severity":1,"message":"214","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":23},{"ruleId":"175","severity":1,"message":"215","line":15,"column":8,"nodeType":"177","endLine":15,"endColumn":10,"suggestions":"216"},{"ruleId":"179","severity":1,"message":"217","line":21,"column":57,"nodeType":"181","messageId":"182","endLine":21,"endColumn":59},{"ruleId":"179","severity":1,"message":"217","line":45,"column":53,"nodeType":"181","messageId":"182","endLine":45,"endColumn":55},{"ruleId":"171","severity":1,"message":"188","line":3,"column":36,"nodeType":"173","messageId":"174","endLine":3,"endColumn":41},{"ruleId":"171","severity":1,"message":"189","line":3,"column":50,"nodeType":"173","messageId":"174","endLine":3,"endColumn":58},{"ruleId":"175","severity":1,"message":"210","line":14,"column":8,"nodeType":"177","endLine":14,"endColumn":10,"suggestions":"218"},{"ruleId":"175","severity":1,"message":"196","line":18,"column":8,"nodeType":"197","endLine":18,"endColumn":20},{"ruleId":"175","severity":1,"message":"192","line":18,"column":8,"nodeType":"197","endLine":18,"endColumn":20,"suggestions":"219"},{"ruleId":"171","severity":1,"message":"220","line":16,"column":12,"nodeType":"173","messageId":"174","endLine":16,"endColumn":26},{"ruleId":"175","severity":1,"message":"221","line":31,"column":8,"nodeType":"177","endLine":31,"endColumn":10,"suggestions":"222"},{"ruleId":"175","severity":1,"message":"223","line":39,"column":8,"nodeType":"177","endLine":39,"endColumn":10,"suggestions":"224"},{"ruleId":"171","severity":1,"message":"225","line":87,"column":11,"nodeType":"173","messageId":"174","endLine":87,"endColumn":23},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListedItems'. Either include it or remove the dependency array.","ArrayExpression",["228"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'roundTo2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSoldItems'. Either include it or remove the dependency array.",["229"],"React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.",["230"],"'Label' is defined but never used.","'FormText' is defined but never used.","React Hook useEffect has missing dependencies: 'getCategories', 'getListingTypes', and 'getWeightTypes'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has a missing dependency: 'getItemInEditMode'. Either include it or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'getSupplyTypes'. Either include it or remove the dependency array.",["233"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression","React Hook useEffect has missing dependencies: 'expensePathId' and 'getExpenseInEditMode'. Either include them or remove the dependency array.",["234"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getSingleExpense'. Either include it or remove the dependency array.",["235"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getSingleListedItem'. Either include it or remove the dependency array.",["236"],"'editSoldItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleSoldItem' and 'soldItemId'. Either include them or remove the dependency array.",["237"],"React Hook useEffect has missing dependencies: 'getExpensesByMonth' and 'getExpensesBySupplyType'. Either include them or remove the dependency array.",["238"],"'OutlinedInput' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfitByCategories', 'getProfitByListingType', 'getProfitByMonth', and 'getProfitByYear'. Either include them or remove the dependency array.",["239"],"Array.prototype.map() expects a value to be returned at the end of arrow function.",["240"],["241"],"'sortedSoldItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getExpensesByMonth', 'getListedItems', 'getProfitByMonth', 'getSoldItems', and 'getSoldItemsByMonth'. Either include them or remove the dependency array.",["242"],"React Hook useEffect has a missing dependency: 'soldItems'. Either include it or remove the dependency array.",["243"],"'profitlabels' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"262","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [getListedItems]",{"range":"275","text":"276"},"Update the dependencies array to be: [getSoldItems]",{"range":"277","text":"278"},"Update the dependencies array to be: [getExpenses]",{"range":"279","text":"280"},"Update the dependencies array to be: [getCategories, getListingTypes, getWeightTypes]",{"range":"281","text":"282"},"Update the dependencies array to be: [getItemInEditMode, itemPathId]",{"range":"283","text":"284"},"Update the dependencies array to be: [getSupplyTypes]",{"range":"285","text":"286"},"Update the dependencies array to be: [expensePathId, getExpenseInEditMode]",{"range":"287","text":"288"},"Update the dependencies array to be: [getSingleExpense]",{"range":"289","text":"290"},"Update the dependencies array to be: [getSingleListedItem]",{"range":"291","text":"292"},"Update the dependencies array to be: [getSingleSoldItem, soldItemId]",{"range":"293","text":"294"},"Update the dependencies array to be: [getExpensesByMonth, getExpensesBySupplyType]",{"range":"295","text":"296"},"Update the dependencies array to be: [getProfitByCategories, getProfitByListingType, getProfitByMonth, getProfitByYear]",{"range":"297","text":"298"},{"range":"299","text":"294"},"Update the dependencies array to be: [getItemInEditMode]",{"range":"300","text":"301"},"Update the dependencies array to be: [getExpensesByMonth, getListedItems, getProfitByMonth, getSoldItems, getSoldItemsByMonth]",{"range":"302","text":"303"},"Update the dependencies array to be: [soldItems]",{"range":"304","text":"305"},[780,782],"[getListedItems]",[521,523],"[getSoldItems]",[532,534],"[getExpenses]",[848,850],"[getCategories, getListingTypes, getWeightTypes]",[949,961],"[getItemInEditMode, itemPathId]",[624,626],"[getSupplyTypes]",[734,749],"[expensePathId, getExpenseInEditMode]",[461,463],"[getSingleExpense]",[480,482],"[getSingleListedItem]",[447,449],"[getSingleSoldItem, soldItemId]",[494,496],"[getExpensesByMonth, getExpensesBySupplyType]",[616,618],"[getProfitByCategories, getProfitByListingType, getProfitByMonth, getProfitByYear]",[549,551],[611,623],"[getItemInEditMode]",[1295,1297],"[getExpensesByMonth, getListedItems, getProfitByMonth, getSoldItems, getSoldItemsByMonth]",[1577,1579],"[soldItems]"]